Ext.define('HelcPDA.model.ghj.GHJInfoModel',{
	extend:'Ext.data.Model',
	config:{
		
		fields : [ 
	'AgreementBusinessType',
	'AgreementHeaderId',
	'AgreementItemId',
	'AgreementNumber',
	'AirPollution',
	'Applicant',
	'ApplicantDate',
	'ApprovalQuantity',
	'AreaId',
	'AreaName',
	'AssetAddress',
	'AssetAddressId',
	'AssetDomainId',
	'AssetDomainName',
	'AssetEdificeId',
	'AssetEdificeName',
	'AssetId',
	'AssetNumber',
	'CompQuantity',
	'CompanyId',
	'CompanyOrganization',
	'CompanyOrganizationId',
	'ComponentAliasName',
	'ComponentAreaId',
	'ComponentAreaName',
	'ComponentAssetDomainId',
	'ComponentAssetDomainName',
	'ComponentAssetEdificeId',
	'ComponentAssetEdificeName',
	'ComponentAssetId',
	'ComponentAssetNumber',
	'ComponentBackupQuantity',
	'ComponentCode',
	'ComponentComments',
	'ComponentComp',
	'ComponentCompDescription',
	'ComponentCompFoundFlag',
	'ComponentCompId',
	'ComponentCompUnit',
	'ComponentCompanyOrganization',
	'ComponentCompanyOrganizationId',
	'ComponentCreated',
	'ComponentDataSource',
	'ComponentDispatchedQuantity',
	'ComponentEBSContractNumber',
	'ComponentFoundFlag',
	'ComponentGroupId',
	'ComponentGroupName',
	'ComponentId',
	'ComponentName',
	'ComponentOrderNumber',
	'ComponentOutboundDate',
	'ComponentPrimaryOrganizationId',
	'ComponentQuantity',
	'ComponentReceiptor',
	'ComponentReturnFlag',
	'ComponentShipmentNumber',
	'ComponentSubmitedQuantity',
	'ComponentUsefulQuantity',
	'CostExplanation',
	'Created',
	'DispatchQuantity',
	'ElevatorMark',
	'ElevatorType',
	'FaultReason',
	'Floor',
	'GroupId',
	'GroupName',
	'HELUsePDAFlag',
	'HandoverToAccountDate',
	'HandoverToMDate',
	'HighBasicity',
	'HighTemperature',
	'Id',
	'KAMpType',
	'LastStatus',
	'Normal',
	'Other',
	'OutBoundDate2',
	'Parts',
	'PreventiveReplaceFlg',
	'PrimaryOrganizationId',
	'ProductId',
	'ProductName',
	'ProductPart',
	'RecordedByFullName',
	'ReplaceBy',
	'ReplaceDate',
	'ReserveQuantity',
	'ResponsibilityDivision',
	'RunTime',
	'SRId',
	'SRNumber',
	'Status',
	'TechRegisteredDate',
	'Type',
	'UsedQuantity',
	'WaitingQuantity',
	'Wet',
	'Wind',

		]
	}
});