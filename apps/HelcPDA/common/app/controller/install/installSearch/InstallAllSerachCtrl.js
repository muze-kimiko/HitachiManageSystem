/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 3.0.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HelcPDA.controller.install.installSearch.InstallAllSerachCtrl', {
    extend: 'HelcPDA.controller.ApplicationController',

    config: {
    	refs:{
    		//查找信息
    		searchAll_beginning:'button[id=searchAll_beginning]',
    		searchAll_secondList:'list[id=AzSearch_List]',
    		searchAll_installSearchList1:'list[id=AzSearch_List1]',
    		searchAll_Search_Ts:'button[id=Search_Ts]',
    		searchAll_Search_Cj:'button[id=Search_Cj]',
    		searchAll_serach_installList:'list[id=serach_installList]',
    		serach_installList_PC:'list[id=serach_installList_PC]',
    	    //返回
    		searchAll_secondPCList:'list[id=secondPCList]',
    		installSearchPCList1:'list[id=searchPCList1]',
    		serach_installList_XT:'list[id=serach_installList_XT]',
    		BackSearch:'button[id=BackSearch]',
    		searchAll_secondXTList:'list[id=searchAll_secondXTList]',
    		searchAll_ThreeXTList:'list[id=searchAll_ThreeXTList]',
    		XT_Search_List2:'list[id=XT_Search_List2]'
    	},
        control: {
        	searchAll_beginning:{tap:'searchAll_beginning'},
    		searchAll_secondList:{itemtap:'searchAll_secondList'},
    		searchAll_installSearchList1:{itemtap:'installSearchList1'},
    		searchAll_Search_Ts:{tap:'Search_Ts'},
    		searchAll_Search_Cj:{tap:'Search_Cj'},
    		searchAll_serach_installList:{itemtap:'serach_installList'},
    		serach_installList_PC:{itemtap:'serach_installList_PC'},
    		BackSearch:{tap:'BackSearch'},
    		searchAll_secondPCList:{itemtap:'searchAll_secondPCList'},
    		installSearchPCList1:{itemtap:'installSearchPCList1'},
    		serach_installList_XT:{itemtap:'serach_installList_XT'},
    		searchAll_secondXTList:{itemtap:'searchAll_secondXTList'},
    		searchAll_ThreeXTList:{itemtap:'searchAll_ThreeXTList'},
    		XT_Search_List2:{itemtap:'XT_Search_List2'}
        }
    }, 
    //总返回
    BackSearch:function(){
    	this.BackView();
    },
    //开始提取数据，查找需要的值
    searchAll_beginning:function(){
    	 var obj=this; 
    	 var search_choice=Ext.getCmp('Choice_Search').getValue();
		 var content={};
		 content=obj.getOrginalData();
		 if(content==null){
			 WL.Toast.show("请输入搜索条件");
			 return;
		 }
		 //..............................。。。。。。。。。。。。安装结果集↓↓
		 //安装数据精确查询结果集
		 function getResult(res){
			 //获取到数据，或者没有获取到数据，跳到下个页面。数据初始化
			 var store=obj.getStore('InstallSearchListStore','HelcPDA.store.install.installSearch.InstallSearchListStore');
			 var length=res.item.length;
			 if(length>0){
				 //将数据弄入缓存，在缓存中操作
				var data=obj.insertJSONStore(res.item);
				obj.NextView('installSearchList','HelcPDA.view.install.installSearch.InstallSearchList');
			    store.setData(data);
			 }else if(content.status=='yes'){
				 WL.Toast.show('输入精确合同号(工号),不支持模糊搜索'); 
				 return;
			 }else{
				 //查找缓存，如果缓存存在，在缓存中拿，如果没有，提示
				 WL.Toast.show('没有查找到相关的信息');
				 return;
			    }
		 }
		 //安装数据模糊查询结果集
		 function getResult1(res){
			var length=res.item.length;
			if(length>1){
				//大于一条数据的时候，选择提交查询
				var PanelId='instalSearchlistPanel';
	        	var ListArray=[];
	        	ListArray.id='serach_installList';
	        	ListArray.StoreName='InstallSearchList0Store';
	        	ListArray.StoreFullName='HelcPDA.store.install.installSearch.InstallSearchList0Store';
	        	ListArray.StoreParam=["UserID","UserName"];
	        	var Data=res.item;
	        	obj.getList(PanelId,ListArray,Data);
			}else if(length==1){
				//等于一条数据的时候，直接查询
				 content.USERID=res.item[0].UserID;
				 //验证是应该传哪个ID过去
				 var mine={};
				 mine=obj.CheckIdtefy(content);
				 obj.connectServer(getResult,'installShowProcessAction.do?method=toSearch',JSON.stringify(mine));
			}else{
				WL.Toast.show('没有查找到相关的信息');
				return;
			}
		 }
		//..........................................安装结果集↑↑
		//..........................................排产结果集↓↓
		 //排产模糊查询
		 function getPCResult1(res){
			 var length=res.item.length;
			 if(length>1){
				    var PanelId='instalSearchlistPanel_PC';
		        	var ListArray=[];
		        	ListArray.id='serach_installList_PC';
		        	ListArray.StoreName='InstallSearchList0Store';
		        	ListArray.StoreFullName='HelcPDA.store.install.installSearch.InstallSearchList0Store';
		        	ListArray.StoreParam=["UserID","UserName"];
		        	var Data=res.item;
		        	obj.getList(PanelId,ListArray,Data);
			 }else if(length==1){
				 obj.connectServer(getPCResult,'installQRPCAction.do?method=toSearchDetail',JSON.stringify(content));  
			 }else{
				 WL.Toast.show('没有查找到相关的信息');
					return; 
			 }
		 }
		 //排产精确查询
		 function getPCResult(res){
			 //获取到数据，或者没有获取到数据，跳到下个页面。数据初始化
			 var store=obj.getStore('InstallSearchListStore','HelcPDA.store.install.installSearch.InstallSearchListStore');
			 var length=res.item.length;
			 if(length>0){
				 //将数据弄入缓存，在缓存中操作
				var data=obj.insertPCJSONStore(res.item);
				obj.NextView('installProduceSearchList','HelcPDA.view.install.installProduceSearch.InstallProduceSearchList');
			    store.setData(data);
			 }else if(content.status=='yes'){
				 WL.Toast.show('输入精确合同号(工号),不支持模糊搜索'); 
				 return;
			 }else{
				 //查找缓存，如果缓存存在，在缓存中拿，如果没有，提示
				 WL.Toast.show('没有查找到相关的信息');
				 return;
			    }
		 }
		 //..........................................排产结果集↑↑
		 //箱头模糊查询
		 function getXTResult1(res){
			 var length=res.item.length;
			 if(length>1){
				    var PanelId='instalSearchlistPanel_XT';
		        	var ListArray=[];
		        	ListArray.id='serach_installList_XT';
		        	ListArray.StoreName='InstallSearchList0Store';
		        	ListArray.StoreFullName='HelcPDA.store.install.installSearch.InstallSearchList0Store';
		        	ListArray.StoreParam=["UserID","UserName"];
		        	var Data=res.item;
		        	obj.getList(PanelId,ListArray,Data);
			 }else if(length==1){
				 obj.connectServer(getXTResult,'installShowProcessAction.do?method=toSearchXTDetail',JSON.stringify(content));  
			 }else{
				 WL.Toast.show('没有查找到相关的信息');
					return; 
			 }
		 }
		 //箱头精确查询
		 function getXTResult(res){
			 //获取到数据，或者没有获取到数据，跳到下个页面。数据初始化
			 var store=obj.getStore('InstallSearchListStore','HelcPDA.store.install.installSearch.InstallSearchListStore');
			 var length=res.item.length;
			 if(length>0){
				 //将数据弄入缓存，在缓存中操作
				var data=obj.insertXTJSONStore(res.item);
				obj.NextView('installBoxSearchList','HelcPDA.view.install.installBoxSearch.InstallBoxSearchList');
			    store.setData(data);
			 }else if(content.status=='yes'){
				 WL.Toast.show('输入的合同号(工号)不精确,或无相关箱头号'); 
				 return;
			 }else{
				 //查找缓存，如果缓存存在，在缓存中拿，如果没有，提示
				 WL.Toast.show('没有查找到相关的信息');
				 return;
			    }
		 }
		 
		 //...........................................箱头结果集↑↑
		 if(search_choice=='安装数据查询'){
			 var num=obj.getSearchStyle(content);
			 if(num==1){
				 //精确查询
				 obj.connectServer(getResult,'installShowProcessAction.do?method=toSearch',JSON.stringify(content));
			 }else{
				 //模糊查询
				 obj.connectServer(getResult1,'installShowProcessAction.do?method=toSearchCommon',JSON.stringify(content));
			 }
		     
		 }else if(search_choice=='排产数据查询'){
			 //排产数据查询时，把调试员和厂检员数据清空。
			 var num=obj.getSearchStyle(content);
			 if(num==1){
				 //精确查询
				 obj.connectServer(getPCResult,'installQRPCAction.do?method=toSearchDetail',JSON.stringify(content));
			 }else{
				 //模糊查询
				 obj.connectServer(getPCResult1,'installQRPCAction.do?method=toSearchCommon',JSON.stringify(content));
			 }
		 }else if(search_choice=='箱头数据查询'){
			 var num=obj.getSearchStyle(content);
			 if(num==1){
				 //精确查询
				 obj.connectServer(getXTResult,'installShowProcessAction.do?method=toSearchXTDetail',JSON.stringify(content));
			 }else{
				 //模糊查询
				 obj.connectServer(getXTResult1,'installShowProcessAction.do?method=toSearchXTCommon',JSON.stringify(content));
			 }
		 }else{}
	},
	//安装数据选择弹出框的数据，进行详细查找
	serach_installList:function(obk,index,target,record,e,eOpts){
		var obj=this;
		var content={};
		content.USERID=record.get('UserID');
		 var mine={};
		 mine=obj.CheckIdtefy(content);
		obj.connectServer(getResult,'installShowProcessAction.do?method=toSearch',JSON.stringify(mine));
	    //摧毁选择的list列表
		var instalSearchlistPanel=Ext.getCmp('Panel_List_Id');
		if(instalSearchlistPanel){
			instalSearchlistPanel.destroy();
		 }
		//精确查询结果集
		 function getResult(res){
			 //获取到数据，或者没有获取到数据，跳到下个页面。数据初始化
			 var store=obj.getStore('InstallSearchListStore','HelcPDA.store.install.installSearch.InstallSearchListStore');
			 var length=res.item.length;
			 if(length>0){
				 //将数据弄入缓存，在缓存中操作
				var data=obj.insertJSONStore(res.item);
				obj.NextView('installSearchList','HelcPDA.view.install.installSearch.InstallSearchList');
			    store.setData(data);
			 }else if(content.status=='yes'){
				 WL.Toast.show('输入精确合同号(工号),不支持模糊搜索'); 
				 return;
			 }else{
				 //查找缓存，如果缓存存在，在缓存中拿，如果没有，提示
				 WL.Toast.show('没有查找到相关的信息');
				 return;
			    }
		 }
	
	},
	//排产选择list中的数据。
	serach_installList_PC:function(obk,index,target,record,e,eOpts){
		var obj=this;
		var content={};
		content.INIT_PERSON_ID=record.get('INIT_PERSON_ID');
		obj.connectServer(getPCResult,'installQRPCAction.do?method=toSearchDetail',JSON.stringify(content));
		var instalSearchlistPanel_PC=Ext.getCmp('Panel_List_Id');
		if(instalSearchlistPanel_PC){
			instalSearchlistPanel_PC.destroy();
		 }
		function getPCResult(res){
			 //获取到数据，或者没有获取到数据，跳到下个页面。数据初始化
			 var store=obj.getStore('InstallSearchListStore','HelcPDA.store.install.installSearch.InstallSearchListStore');
			 var length=res.item.length;
			 if(length>0){
				 //将数据弄入缓存，在缓存中操作
				var data=obj.insertPCJSONStore(res.item);
				obj.NextView('installProduceSearchList','HelcPDA.view.install.installProduceSearch.InstallProduceSearchList');
			    store.setData(data);
			 }else if(content.status=='yes'){
				 WL.Toast.show('输入精确合同号(工号),不支持模糊搜索'); 
				 return;
			 }else{
				 //查找缓存，如果缓存存在，在缓存中拿，如果没有，提示
				 WL.Toast.show('没有查找到相关的信息');
				 return;
			    }
		 }
	},
	//箱头list中选择的数据
	serach_installList_XT:function(obk,index,target,record,e,eOpts){
		var obj=this;
		var content={};
		content.INIT_PERSON_ID=record.get('INIT_PERSON_ID');
		 obj.connectServer(getXTResult,'installShowProcessAction.do?method=toSearchXTDetail',JSON.stringify(content));  
		var instalSearchlistPanel_XT=Ext.getCmp('Panel_List_Id');
		if(instalSearchlistPanel_XT){
			instalSearchlistPanel_XT.destroy();
		 }
		function getXTResult(res){
			 //获取到数据，或者没有获取到数据，跳到下个页面。数据初始化
			 var store=obj.getStore('InstallSearchListStore','HelcPDA.store.install.installSearch.InstallSearchListStore');
			 var length=res.item.length;
			 if(length>0){
				 //将数据弄入缓存，在缓存中操作
				var data=obj.insertXTJSONStore(res.item);
				obj.NextView('installBoxSearchList','HelcPDA.view.install.installBoxSearch.InstallBoxSearchList');
			    store.setData(data);
			 }else if(content.status=='yes'){
				 WL.Toast.show('输入的合同号(工号)不精确,或无相关箱头号'); 
				 return;
			 }else{
				 //查找缓存，如果缓存存在，在缓存中拿，如果没有，提示
				 WL.Toast.show('没有查找到相关的信息');
				 return;
			    }
		 }
		
	},
	//验证该传过去的ID是属于什么,监理,调试,厂检？
	CheckIdtefy:function(mine){
		var originalData={};
		originalData.ENGCONTRACT_NUMBER=Ext.getCmp('encontact_number').getValue();
    	originalData.ELEVATOR_NO=Ext.getCmp('elevator_number').getValue();
    	originalData.INIT_PERSON_NAME=Ext.getCmp('int_user').getValue();
    	originalData.DEBUG_EMPLOYEE_NAME=Ext.getCmp('ebs_user').getValue();
    	originalData.CHECK_EMPLOYEE_NAME=Ext.getCmp('fac_user').getValue();
		
    	if(originalData.INIT_PERSON_NAME!=''){
    		mine.JL_USERID=mine.USERID;
    		mine.TS_USERID='';
    		mine.CJ_USERID='';
    		return mine;
    	}else if(originalData.DEBUG_EMPLOYEE_NAME!=''){
    		mine.JL_USERID='';
    		mine.TS_USERID=mine.USERID;
    		mine.CJ_USERID='';
    		return mine;
    	}else if(originalData.CHECK_EMPLOYEE_NAME!=''){
    		mine.JL_USERID='';
    		mine.TS_USERID='';
    		mine.CJ_USERID=mine.USERID;
    		return mine;
    	}else{
    		mine.JL_USERID='';
    		mine.TS_USERID='';
    		mine.CJ_USERID='';	
    	}
		return mine;
	},
   //判断是什么情况，选择何种传输方式
	getSearchStyle:function(content){
		var ENGCONTRACT_NUMBER=content.ENGCONTRACT_NUMBER;
		var ELEVATOR_NO=content.ELEVATOR_NO;
		var ELVBOX_NAME=content.ELVBOX_NAME;
		if(ENGCONTRACT_NUMBER!=''||ELEVATOR_NO!=''||ELVBOX_NAME!=''){
			return 1; 
		}else{
			return 0;
		}
	},
   //装填原始数据
    getOrginalData:function(){
    	var originalData={};
    	originalData.ENGCONTRACT_NUMBER=Ext.getCmp('encontact_number').getValue();
    	originalData.ELEVATOR_NO=Ext.getCmp('elevator_number').getValue();
    	originalData.INIT_PERSON_NAME=Ext.getCmp('int_user').getValue();
    	originalData.DEBUG_EMPLOYEE_NAME=Ext.getCmp('ebs_user').getValue();
    	originalData.CHECK_EMPLOYEE_NAME=Ext.getCmp('fac_user').getValue();
    	originalData.ELVBOX_NAME=Ext.getCmp('box_number').getValue();
    	if(originalData.ENGCONTRACT_NUMBER==''&&originalData.ELEVATOR_NO==''&&originalData.INIT_PERSON_NAME==''&&
    			originalData.DEBUG_EMPLOYEE_NAME==''&&originalData.CHECK_EMPLOYEE_NAME==''&&originalData.ELVBOX_NAME==''){
    		return null;
    	}if(originalData.ENGCONTRACT_NUMBER!=''||originalData.ELEVATOR_NO!=''||originalData.ELVBOX_NAME!=''){
    		originalData.status='yes';
    		return originalData;
    	}
    	return originalData;
    },
    //对获取的箱头数据进行处理，并储存到jsonStor
    insertXTJSONStore:function(data){
    	var obj=this;
        //创建合同层表
    	var length=data.length;
        var tempList=[];
        for(var i=0;i<length;i++){
     	   tempList[i]=data[i].ENGCONTRACT_NUMBER;
        }
        tempList=tempList.unique3();
        var tempLength=tempList.length;
        var stext=[];
        for(var i=0;i<tempLength;i++){
     	   var NUM=0;
     	   var temp={};
     	   for(var j=0;j<length;j++){
     	    	if(tempList[i]==data[j].ENGCONTRACT_NUMBER){
     	    		NUM++;  //工号台数
     	    	}
     	    }
     	   temp.ENGCONTRACT_NUMBER=tempList[i];
     	   temp.NUM=NUM;
     	   stext[i]=temp;
        }
        var query={tid:'SearchXT_ALL',tcode:'list',stext:stext};
        var AddQuery=[];
        var length=data.length;
        for(var i=0;i<length;i++){
     	   var tempQuery={};
     	   tempQuery.tid='SearchXT_ALL';
     	   tempQuery.tcode=data[i].ENGCONTRACT_NUMBER+"_SearchXT";
     	   tempQuery.stext=data[i];
     	   AddQuery[i]=tempQuery;
        }
        AddQuery.push(query);
        obj.JSONStoreFind({tid:'SearchXT_ALL'},AddQuery);
        console.log(JSON.stringify(AddQuery));
        return stext;
    },
    //对获取的排产数据进行处理，并储存到jsonStor
    insertPCJSONStore:function(data){
    	var obj=this;
        var length=data.length;
        var tempList=[];
        for(var i=0;i<length;i++){
     	   tempList[i]=data[i].ENGCONTRACT_NUMBER;
        }
        tempList=tempList.unique3();
        var tempLength=tempList.length;
        var stext=[];
        for(var i=0;i<tempLength;i++){
     	   var NUM=0;
     	   var temp={};
     	   for(var j=0;j<length;j++){
     	    	if(tempList[i]==data[j].ENGCONTRACT_NUMBER){
     	    		NUM++;
     	    	}
     	    }
     	   temp.ENGCONTRACT_NUMBER=tempList[i];
     	   temp.NUM=NUM;
     	   stext[i]=temp;
        }
        var query={tid:'SearchPC_ALL',tcode:'list',stext:stext};
        var AddQuery=[];
        var length=data.length;
        for(var i=0;i<length;i++){
     	   var tempQuery={};
     	   tempQuery.tid='SearchPC_ALL';
     	   tempQuery.tcode=data[i].ENGCONTRACT_NUMBER+"_SearchPC";
     	   tempQuery.stext=data[i];
     	   AddQuery[i]=tempQuery;
        }
        AddQuery.push(query);
        obj.JSONStoreFind({tid:'SearchPC_ALL'},AddQuery);
        console.log(JSON.stringify(AddQuery));
        return stext;
    },
    //对获取的安装数据进行处理，并储存到jsonStore
    insertJSONStore:function(data){
       var obj=this;
       var length=data.length;
       var tempList=[];
       for(var i=0;i<length;i++){
    	   tempList[i]=data[i].ENGCONTRACT_NUMBER;
       }
       tempList=tempList.unique3();
       var tempLength=tempList.length;
       var stext=[];
       for(var i=0;i<tempLength;i++){
    	   var NUM=0;
    	   var CUSTOMER_NAME=null;
    	   var temp={};
    	   for(var j=0;j<length;j++){
    	    	if(tempList[i]==data[j].ENGCONTRACT_NUMBER){
    	    		NUM++;
    	    		CUSTOMER_NAME=data[j].CUSTOMER_NAME;
    	    	}
    	    }
    	   temp.ENGCONTRACT_NUMBER=tempList[i];
    	   temp.NUM=NUM;
    	   temp.CUSTOMER_NAME=CUSTOMER_NAME;
    	   stext[i]=temp;
       }
       var query={tid:'Search_ALL',tcode:'list',stext:stext};
       var AddQuery=[];
       var length=data.length;
       for(var i=0;i<length;i++){
    	   var tempQuery={};
    	   tempQuery.tid='Search_ALL';
    	   tempQuery.tcode=data[i].ENGCONTRACT_NUMBER+"_SearchAZ";
    	   tempQuery.stext=data[i];
    	   AddQuery[i]=tempQuery;
       }
       AddQuery.push(query);
       obj.JSONStoreFind({tid:'Search_ALL'},AddQuery);
       console.log(JSON.stringify(AddQuery));
       return stext;
 //查找所有tid为Search_ALL的数据表，存在，就删除
    },
    JSONStoreFind:function(query,AddQuery){
    	var obj=this;
    	var WLSearch=WL.JSONStore.get(collectionName);
    	WLSearch.find(query).then(function(res){
    		if(res.length>0){
    			//存在，执行删除
    			obj.JSONStoreRemove(query,AddQuery);
    		}else{
    			obj.JSONStoreAdd(AddQuery);
    		}
    	}).fail(function(){
    		
    	});
    },
    JSONStoreRemove:function(query,AddQuery){
    	var obj=this;
     	var WLSearch=WL.JSONStore.get(collectionName);
    	WLSearch.remove(query).then(function(){
               obj.JSONStoreAdd(AddQuery);
    	}).fail(function(){
    		
    	});
    },
    JSONStoreAdd:function(AddQuery){
    	var WLSearch=WL.JSONStore.get(collectionName);
    	WLSearch.add(AddQuery).then(function(){
             //  WLSearch.findAll().then(function(res){alert("全部长度:"+res.length)})    
    	}).fail(function(){
    		
    	});
    },
    //点击安装第一个列表，生成第二个list列表.....
    searchAll_secondList:function(obk,index,target,record,e,eOpts ){
    	var obj=this;
    	var WLSearch=WL.JSONStore.get(collectionName);
    	var ENGCONTRACT_NUMBER=record.get('ENGCONTRACT_NUMBER');
    	var query={tcode:ENGCONTRACT_NUMBER+'_SearchAZ'};
    	WLSearch.find(query).then(function(res){
    		var tempList=[];
    		var length=res.length;
    		for(var i=0;i<length;i++){
    			tempList[i]=res[i].json.stext;
    		}
    		obj.NextView('installSearchList1','HelcPDA.view.install.installSearch.InstallSearchList1');
            var store=obj.getStore('InstallSearchListStore1','HelcPDA.store.install.installSearch.InstallSearchListStore1');    		
            store.setData(tempList);
    	}).fail(function(){});
    },
    //点击箱头第一个列表，生成第二个list列表....
    searchAll_secondXTList:function(obk,index,target,record,e,eOpts ){
    	var obj=this;
    	var WLSearch=WL.JSONStore.get(collectionName);
    	var ENGCONTRACT_NUMBER=record.get('ENGCONTRACT_NUMBER');
    	var query={tcode:ENGCONTRACT_NUMBER+'_SearchXT'};
    	WLSearch.find(query).then(function(res){
    		var tempList=[];
    		var length=res.length;
    		for(var i=0;i<length;i++){
    			tempList[i]=res[i].json.stext.ELEVATOR_NO;
    		}
    		   var tempList1=tempList.unique3();
    	       var tempLength=tempList1.length;
    	       var stext=[];
    	       for(var i=0;i<tempLength;i++){
    	    	   var NUM=0;
    	    	   var ENGCONTRACT_NUMBER=null;
    	    	   var temp={};
    	    	   for(var j=0;j<length;j++){
    	    	    	if(tempList1[i]==tempList[j]){
    	    	    		NUM++;
    	    	    		ENGCONTRACT_NUMBER=res[i].json.stext.ENGCONTRACT_NUMBER;
    	    	    	}
    	    	    }
    	    	   temp.ELEVATOR_NO=tempList1[i];
    	    	   temp.ENGCONTRACT_NUMBER=ENGCONTRACT_NUMBER
    	    	   temp.NUM=NUM;
    	    	   stext[i]=temp;
    	       } 
    		obj.NextView('installBoxSearchList1','HelcPDA.view.install.installBoxSearch.InstallBoxSearchList1');
            var store=obj.getStore('InstallSearchListStore1','HelcPDA.store.install.installSearch.InstallSearchListStore1');    		
            store.setData(stext);
    	}).fail(function(){});
    },
    //点击箱头第二个列表生成第三个列表
    searchAll_ThreeXTList:function(obk,index,target,record,e,eOpts){
    	var obj=this;
    	var WLSearch=WL.JSONStore.get(collectionName);
    	var ENGCONTRACT_NUMBER=record.get('ENGCONTRACT_NUMBER');
    	var ELEVATOR_NO=record.get('ELEVATOR_NO');
    	var query={tcode:ENGCONTRACT_NUMBER+'_SearchXT'};
    	WLSearch.find(query).then(function(res){
    		var tempList=[];
    		var tempName=[];
    		var tempHT=[];
    		var tempMM=[];
    		var length=res.length;
    		for(var i=0;i<length;i++){
    			tempName[i]=res[i].json.stext;
    			tempHT[i]=res[i].json.stext.ENGCONTRACT_NUMBER;
    		}
    		for(var i=0;i<tempHT.length;i++){
    			 if(ENGCONTRACT_NUMBER==tempHT[i]){
    				 tempList.push(tempName[i].ELEVATOR_NO); 
    				 tempMM.push(tempName[i]);
    			 }
    		}
    		   var length=tempList.length;
    	       var stext=[];
    	    	   for(var j=0;j<length;j++){
    	    	    	if(ELEVATOR_NO==tempList[j]){
    	    	    		 stext.push(tempMM[j]);
    	    	    	}
    	    	    }
    	    	   
    		obj.NextView('installBoxSearchList2','HelcPDA.view.install.installBoxSearch.InstallBoxSearchList2');
            var store=obj.getStore('InstallSearchListStore2','HelcPDA.store.install.installSearch.InstallSearchListStore2');    		
            store.setData(stext);
    	}).fail(function(){});
    },
    //点击箱头第三个列表，生成详细数据
    XT_Search_List2:function(obk,index,target,record,e,eOpts ){
          this.NextView('installBoxSearchListDetail','HelcPDA.view.install.installBoxSearch.InstallBoxSearchListDetail');
          Ext.getCmp('XT_INIT_PERSON_NAME').setValue(record.get('UserName'));
          Ext.getCmp('XT_ENGCONTRACT_NUMBER').setValue(record.get('ENGCONTRACT_NUMBER'));
          Ext.getCmp('XT_ELEVATOR_NO').setValue(record.get('ELEVATOR_NO'));
          Ext.getCmp('XT_ELVBOX_NAME').setValue(record.get('ELVBOX_NAME'));
          Ext.getCmp('XT_STATUS').setValue(record.get('STATUS'));

    },
    //点击排产第一个列表，生成第二个list列表....
    searchAll_secondPCList:function(obk,index,target,record,e,eOpts ){
    	var obj=this;
    	var WLSearch=WL.JSONStore.get(collectionName);
    	var ENGCONTRACT_NUMBER=record.get('ENGCONTRACT_NUMBER');
    	var query={tcode:ENGCONTRACT_NUMBER+'_SearchPC'};
    	WLSearch.find(query).then(function(res){
    		var tempList=[];
    		var length=res.length;
    		for(var i=0;i<length;i++){
    			tempList[i]=res[i].json.stext;
    		}
    		obj.NextView('installProduceSearchList1','HelcPDA.view.install.installProduceSearch.InstallProduceSearchList1');
            var store=obj.getStore('InstallSearchListStore1','HelcPDA.store.install.installSearch.InstallSearchListStore1');    		
            store.setData(tempList);
    	}).fail(function(){});
    },
    //点击排产第二个list,进入详细界面
    installSearchPCList1:function(obk,index,target,record,e,eOpts){
    	 this.NextView('installProduceSearchListDetail','HelcPDA.view.install.installProduceSearch.InstallProduceSearchListDetail');
    	 Ext.getCmp('PC_ENGCONTRACT_NUMBER').setValue(record.get('ENGCONTRACT_NUMBER'));
    	 Ext.getCmp('PC_ELEVATOR_NO').setValue(record.get('ELEVATOR_NO'));
    	 Ext.getCmp('PC_STATUS').setValue(record.get('STATUS'));
    	 Ext.getCmp('PC_INIT_PERSON_NAME').setValue(record.get('UserName'));
    },
    //点击安装第二个list,进入详细界面
    installSearchList1:function(obk,index,target,record,e,eOpts){
       this.NextView('installSearchListDetail','HelcPDA.view.install.installSearch.InstallSearchListDetail');
   	   Ext.getCmp('ENGCONTRACT_NUMBER').setValue(record.get('ENGCONTRACT_NUMBER'));
	   Ext.getCmp('DEBUG_END_DATE').setValue(record.get('DEBUG_END_DATE'));
	   Ext.getCmp('CUSTOMER_NAME').setValue(record.get('CUSTOMER_NAME'));
	   Ext.getCmp('REPORT_DEBUG_DATE').setValue(record.get('REPORT_DEBUG_DATE'));
	   Ext.getCmp('REPORT_DATE').setValue(record.get('REPORT_DATE'));
	   Ext.getCmp('CHECK_EMPLOYEE_NAME').setValue(record.get('CHECK_EMPLOYEE_NAME'));
	   Ext.getCmp('SEQ_NUM').setValue(record.get('SEQ_NUM'));
	   Ext.getCmp('CHECK_NUM').setValue(record.get('CHECK_NUM'));
	   Ext.getCmp('DEBUG_NUM').setValue(record.get('DEBUG_NUM'));
	   Ext.getCmp('STATUS').setValue(record.get('STATUS'));
	   Ext.getCmp('DEBUG_ARRIVE_DATE').setValue(record.get('DEBUG_ARRIVE_DATE'));
	   Ext.getCmp('CHECK_DATE').setValue(record.get('CHECK_DATE'));
	   Ext.getCmp('CHECK_ARRIVE_DATE').setValue(record.get('CHECK_ARRIVE_DATE'));
	   Ext.getCmp('INIT_PERSON_NAME').setValue(record.get('INIT_PERSON_NAME'));
	   Ext.getCmp('ELEVATOR_NO').setValue(record.get('ELEVATOR_NO'));
	   Ext.getCmp('DEBUG_EMPLOYEE_NAME').setValue(record.get('DEBUG_EMPLOYEE_NAME'));
	   //Ext.getCmp('ENTRANCE_DATE').setValue(record.get('ENTRANCE_DATE'));
	   Ext.getCmp('TASK_ID').setValue(record.get('TASK_ID'));
	   //添加字段
	   Ext.getCmp('ELEVATOR_CLASS_NAME').setValue(record.get('ELEVATOR_CLASS_NAME'));
	   Ext.getCmp('INSTALL_ADDRESS').setValue(record.get('INSTALL_ADDRESS'));
	   Ext.getCmp('CCRQ').setValue(record.get('CCRQ'));
	   Ext.getCmp('ENTRANCE_DATE').setValue(record.get('ENTRANCE_DATE'));
	   Ext.getCmp('SIGNED_TRANSFER_DOC_DATE').setValue(record.get('SIGNED_TRANSFER_DOC_DATE'));
	   Ext.getCmp('GOV_CHECK_DATE').setValue(record.get('GOV_CHECK_DATE'));
	   Ext.getCmp('REPORT_CHECK_DATE').setValue(record.get('REPORT_CHECK_DATE'));
    },
    //搜索调试信息,
    Search_Ts:function(){
    	var obj=this;
    	var TASK_ID=Ext.getCmp('TASK_ID').getValue();
    	var DEBUG_NUM=Ext.getCmp('DEBUG_NUM').getValue();
    	var SEQ_NUM=Ext.getCmp('SEQ_NUM').getValue();
    	 function getResult(res){
    		 if(res.msginfo=='查找成功'){
    			 obj.NextView('installSearchListDetail_Ts','HelcPDA.view.install.installSearch.InstallSearchListDetail_Ts');
    			 Ext.getCmp('installSearchListDetail_Ts').disable();
    			 var stext=res.item[0];
    			 if(stext.DEBUG_ARRIVE_DATE==''||stext.DEBUG_ARRIVE_DATE==null||typeof(stext.DEBUG_ARRIVE_DATE)=='undefined'){
    				 Ext.getCmp('DEBUG_ARRIVE_DATE').setValue(stext.DEBUG_ARRIVE_DATE);
    			 }else{
    				 Ext.getCmp('DEBUG_ARRIVE_DATE').setValue(Ext.Date.format(new Date(stext.DEBUG_ARRIVE_DATE),'Y-m-d'));
    			 }if(stext.SLOW_TRAIN_ENTER_DATE==''||stext.SLOW_TRAIN_ENTER_DATE==null||typeof(stext.SLOW_TRAIN_ENTER_DATE)=='undefined'){
    				 Ext.getCmp('SLOW_TRAIN_ENTER_DATE').setValue(stext.SLOW_TRAIN_ENTER_DATE);
    			 }else{
    				 Ext.getCmp('SLOW_TRAIN_ENTER_DATE').setValue(Ext.Date.format(new Date(stext.SLOW_TRAIN_ENTER_DATE),'Y-m-d'));
    			 }if(stext.FAST_TRAIN_ENTER_DATE==''||stext.FAST_TRAIN_ENTER_DATE==null||typeof(stext.FAST_TRAIN_ENTER_DATE)=='undefined'){
    				 Ext.getCmp('FAST_TRAIN_ENTER_DATE').setValue(stext.FAST_TRAIN_ENTER_DATE);
    			 }else{
    				 Ext.getCmp('FAST_TRAIN_ENTER_DATE').setValue(Ext.Date.format(new Date(stext.FAST_TRAIN_ENTER_DATE),'Y-m-d'));
    			 }
    		     Ext.getCmp('BALANCE_INDEX').setValue(stext.BALANCE_INDEX);
    		     Ext.getCmp('COUNTER_WEIGHT').setValue(stext.COUNTER_WEIGHT);
    		     if(stext.LB_MACHINE_FLAG=="Y"){
    		    	 Ext.getCmp('LB_MACHINE_FLAG').setValue(1);
    		     }else{
    		    	 Ext.getCmp('LB_MACHINE_FLAG').setValue(0);
    		     }
    		     if(stext.FUCTION_TEST_FLAG=="Y"){
    		    	 Ext.getCmp('FUCTION_TEST_FLAG').setValue(1);
    		     }else{
    		    	 Ext.getCmp('FUCTION_TEST_FLAG').setValue(0);
    		     }
    		     if(stext.NEED_SECOND_TEST_WEIGHT=='Y'){
    		    	 Ext.getCmp('NEED_SECOND_TEST_WEIGHT').setValue('是');
    		     }else{
    		    	 Ext.getCmp('NEED_SECOND_TEST_WEIGHT').setValue('否');
    		     }
    		     Ext.getCmp('THREE_GUARANTEE_BAD').setValue(stext.THREE_GUARANTEE_BAD);
    		     Ext.getCmp('DEBUG_END_DATE').setValue(stext.DEBUG_END_DATE);
    		     if(stext.ACHIEVE_PUTIN_CHECK_STARDARD=='Y'){
    		    	 Ext.getCmp('ACHIEVE_PUTIN_CHECK_STARDARD').setValue(1);
    		     }else{
    		    	 Ext.getCmp('ACHIEVE_PUTIN_CHECK_STARDARD').setValue(0);
    		     }
    		     Ext.getCmp('COMMENTS').setValue(stext.COMMENTSS);
    		     //从上个页面获取的数据信息
    		     Ext.getCmp('EBS_FULL_NAME').setValue(Ext.getCmp('DEBUG_EMPLOYEE_NAME').getValue());
    		     //设置电流等信息、、
    		     obj.setDL(res.item1);
    		     //设置新增字段信息
    		     Ext.getCmp('BUILD_UNIT_NUM').setValue(stext.BUILD_UNIT_NUM?stext.BUILD_UNIT_NUM:'');
    			 Ext.getCmp('DATA_CART_NUM').setValue(stext.DATA_CART_NUM?stext.DATA_CART_NUM:'');
    			 Ext.getCmp('PORT_NUM').setValue(stext.PORT_NUM?stext.PORT_NUM:'');
    		 }else{
    			 WL.Toast.show('暂无查找的信息');
    		 }
    	 } 
    	 //288926
    	 var content={TASK_ID:TASK_ID,DEBUG_NUM:DEBUG_NUM,SEQ_NUM:SEQ_NUM};
    	 obj.connectServer(getResult,'installShowProcessAction.do?method=toSearch_Ts',JSON.stringify(content));
    },
    //搜索厂检人员
    Search_Cj:function(){
    	var obj=this;
    	var TASK_ID=Ext.getCmp('TASK_ID').getValue();
    	var CHECK_NUM=Ext.getCmp('CHECK_NUM').getValue();
    	this.NextView('installSearchListDetail_Cj','HelcPDA.view.install.installSearch.InstallSearchListDetail_Cj');
    	Ext.getCmp('installSearchListDetail_Cj').disable();
    	function getResult(res){
    		obj.setCjValue(res.item[0]);
    	}
     
     var content={TASK_ID:TASK_ID,CHECK_NUM:CHECK_NUM};
	 obj.connectServer(getResult,'installShowProcessAction.do?method=toSearch_Cj',JSON.stringify(content));
    },
    //设置电流等信息。。。。
    setDL:function(stext){
    	 //电源电流
    	var tempObject={};
    	for(var i=0;i<stext.length;i++){
    		var text=stext[i].Item+"_"+((stext[i].LOAD).split('%'))[0];
    		tempObject[text]=stext[i].Value;
    	}
	    Ext.getCmp('DYDL_UP_0').setValue(tempObject.DYDL_UP_0);
	    Ext.getCmp('DYDL_UP_30').setValue(tempObject.DYDL_UP_30);
	    Ext.getCmp('DYDL_UP_40').setValue(tempObject.DYDL_UP_40);
	    Ext.getCmp('DYDL_UP_45').setValue(tempObject.DYDL_UP_45);
	    Ext.getCmp('DYDL_UP_50').setValue(tempObject.DYDL_UP_50);
	    Ext.getCmp('DYDL_UP_60').setValue(tempObject.DYDL_UP_60);
	    Ext.getCmp('DYDL_UP_90').setValue(tempObject.DYDL_UP_90);
	    Ext.getCmp('DYDL_UP_100').setValue(tempObject.DYDL_UP_100);
	    Ext.getCmp('DYDL_UP_110').setValue(tempObject.DYDL_UP_110);
	    
	    Ext.getCmp('DYDL_DOWN_0').setValue(tempObject.DYDL_DOWN_0);
	    Ext.getCmp('DYDL_DOWN_30').setValue(tempObject.DYDL_DOWN_30);
	    Ext.getCmp('DYDL_DOWN_40').setValue(tempObject.DYDL_DOWN_40);
	    Ext.getCmp('DYDL_DOWN_45').setValue(tempObject.DYDL_DOWN_45);
	    Ext.getCmp('DYDL_DOWN_50').setValue(tempObject.DYDL_DOWN_50);
	    Ext.getCmp('DYDL_DOWN_60').setValue(tempObject.DYDL_DOWN_60);
	    Ext.getCmp('DYDL_DOWN_90').setValue(tempObject.DYDL_DOWN_90);
	    Ext.getCmp('DYDL_DOWN_100').setValue(tempObject.DYDL_DOWN_100);
	    Ext.getCmp('DYDL_DOWN_110').setValue(tempObject.DYDL_DOWN_110);
        
	    //电机电流
	    Ext.getCmp('DJDL_UP_0').setValue(tempObject.DJDL_UP_0);
	    Ext.getCmp('DJDL_UP_30').setValue(tempObject.DJDL_UP_30);
	    Ext.getCmp('DJDL_UP_40').setValue(tempObject.DJDL_UP_40);
	    Ext.getCmp('DJDL_UP_45').setValue(tempObject.DJDL_UP_45);
	    Ext.getCmp('DJDL_UP_50').setValue(tempObject.DJDL_UP_50);
	    Ext.getCmp('DJDL_UP_60').setValue(tempObject.DJDL_UP_60);
	    Ext.getCmp('DJDL_UP_90').setValue(tempObject.DJDL_UP_90);
	    Ext.getCmp('DJDL_UP_100').setValue(tempObject.DJDL_UP_100);
	    Ext.getCmp('DJDL_UP_110').setValue(tempObject.DJDL_UP_110);
	    
	    Ext.getCmp('DJDL_DOWN_0').setValue(tempObject.DJDL_DOWN_0);
	    Ext.getCmp('DJDL_DOWN_30').setValue(tempObject.DJDL_DOWN_30);
	    Ext.getCmp('DJDL_DOWN_40').setValue(tempObject.DJDL_DOWN_40);
	    Ext.getCmp('DJDL_DOWN_45').setValue(tempObject.DJDL_DOWN_45);
	    Ext.getCmp('DJDL_DOWN_50').setValue(tempObject.DJDL_DOWN_50);
	    Ext.getCmp('DJDL_DOWN_60').setValue(tempObject.DJDL_DOWN_60);
	    Ext.getCmp('DJDL_DOWN_90').setValue(tempObject.DJDL_DOWN_90);
	    Ext.getCmp('DJDL_DOWN_100').setValue(tempObject.DJDL_DOWN_100);
	    Ext.getCmp('DJDL_DOWN_110').setValue(tempObject.DJDL_DOWN_110);
	    
	    //平层数据
	    Ext.getCmp('PCSJ_UP_0').setValue(tempObject.PCSJ_UP_0);
	    Ext.getCmp('PCSJ_UP_30').setValue(tempObject.PCSJ_UP_30);
	    Ext.getCmp('PCSJ_UP_40').setValue(tempObject.PCSJ_UP_40);
	    Ext.getCmp('PCSJ_UP_45').setValue(tempObject.PCSJ_UP_45);
	    Ext.getCmp('PCSJ_UP_50').setValue(tempObject.PCSJ_UP_50);
	    Ext.getCmp('PCSJ_UP_60').setValue(tempObject.PCSJ_UP_60);
	    Ext.getCmp('PCSJ_UP_90').setValue(tempObject.PCSJ_UP_90);
	    Ext.getCmp('PCSJ_UP_100').setValue(tempObject.PCSJ_UP_100);
	    Ext.getCmp('PCSJ_UP_110').setValue(tempObject.PCSJ_UP_110);
	    
	    Ext.getCmp('PCSJ_DOWN_0').setValue(tempObject.PCSJ_DOWN_0);
	    Ext.getCmp('PCSJ_DOWN_30').setValue(tempObject.PCSJ_DOWN_30);
	    Ext.getCmp('PCSJ_DOWN_40').setValue(tempObject.PCSJ_DOWN_40);
	    Ext.getCmp('PCSJ_DOWN_45').setValue(tempObject.PCSJ_DOWN_45);
	    Ext.getCmp('PCSJ_DOWN_50').setValue(tempObject.PCSJ_DOWN_50);
	    Ext.getCmp('PCSJ_DOWN_60').setValue(tempObject.PCSJ_DOWN_60);
	    Ext.getCmp('PCSJ_DOWN_90').setValue(tempObject.PCSJ_DOWN_90);
	    Ext.getCmp('PCSJ_DOWN_100').setValue(tempObject.PCSJ_DOWN_100);
	    Ext.getCmp('PCSJ_DOWN_110').setValue(tempObject.PCSJ_DOWN_110);
	  
	    //电源电压
	    Ext.getCmp('DYDY_UP_0').setValue(tempObject.DYDY_UP_0);
	    Ext.getCmp('DYDY_UP_30').setValue(tempObject.DYDY_UP_30);
	    Ext.getCmp('DYDY_UP_40').setValue(tempObject.DYDY_UP_40);
	    Ext.getCmp('DYDY_UP_45').setValue(tempObject.DYDY_UP_45);
	    Ext.getCmp('DYDY_UP_50').setValue(tempObject.DYDY_UP_50);
	    Ext.getCmp('DYDY_UP_60').setValue(tempObject.DYDY_UP_60);
	    Ext.getCmp('DYDY_UP_90').setValue(tempObject.DYDY_UP_90);
	    Ext.getCmp('DYDY_UP_90').setValue(tempObject.DYDY_UP_90);
	    Ext.getCmp('DYDY_UP_100').setValue(tempObject.DYDY_UP_100);
	    Ext.getCmp('DYDY_UP_110').setValue(tempObject.DYDY_UP_110);
	    
	    Ext.getCmp('DYDY_DOWN_0').setValue(tempObject.DYDY_DOWN_0);
	    Ext.getCmp('DYDY_DOWN_30').setValue(tempObject.DYDY_DOWN_30);
	    Ext.getCmp('DYDY_DOWN_40').setValue(tempObject.DYDY_DOWN_40);
	    Ext.getCmp('DYDY_DOWN_45').setValue(tempObject.DYDY_DOWN_45);
	    Ext.getCmp('DYDY_DOWN_50').setValue(tempObject.DYDY_DOWN_50);
	    Ext.getCmp('DYDY_DOWN_60').setValue(tempObject.DYDY_DOWN_60);
	    Ext.getCmp('DYDY_DOWN_90').setValue(tempObject.DYDY_DOWN_90);
	    Ext.getCmp('DYDY_DOWN_100').setValue(tempObject.DYDY_DOWN_100);
	    Ext.getCmp('DYDY_DOWN_110').setValue(tempObject.DYDY_DOWN_110);
	    
    },
    //设置cj的基础信息
    setCjValue:function(tempObject){
    	 Ext.getCmp('CHECK_ARRIVE_DATE').setValue(tempObject.CHECK_ARRIVE_DATE);
    	 Ext.getCmp('SETUP_UNIT_SIGN_NAME').setValue(tempObject.SETUP_UNIT_SIGN_NAME);
    	 Ext.getCmp('CHEK_MAN_SIGN').setValue(tempObject.CHEK_MAN_SIGN);
    	 Ext.getCmp('INSTALL_CHECK_END_DATE').setValue(tempObject.INSTALL_CHECK_END_DATE);
    	 Ext.getCmp('RECHECK_START_DATE').setValue(tempObject.RECHECK_START_DATE);
    	// Ext.getCmp('DYDY_DOWN_110').setValue(tempObject.DYDY_DOWN_110);
    	 Ext.getCmp('SETUP_UNIT_SIGN1_NAME').setValue(tempObject.SETUP_UNIT_SIGN1_NAME);
    	 Ext.getCmp('RECHECK_FINISH_DATE').setValue(tempObject.RECHECK_FINISH_DATE);
    	 Ext.getCmp('CHECK_DATE').setValue(tempObject.CHECK_DATE);
    	 Ext.getCmp('REPORT_DATE').setValue(tempObject.REPORT_DATE);
    	 Ext.getCmp('AHEAD_REPORT_DATE').setValue(tempObject.AHEAD_REPORT_DATE);
    	 Ext.getCmp('RE_CHECK_DATE').setValue(tempObject.RE_CHECK_DATE);
    	 Ext.getCmp('SERVICE_NUM').setValue(tempObject.SERVICE_NUM);
    	 Ext.getCmp('BAD_DELIVERY_DATE').setValue(tempObject.BAD_DELIVERY_DATE);
    	 Ext.getCmp('CHECK_COMMENTS').setValue(tempObject.CHECK_COMMENTS);
    	 Ext.getCmp('CHECK_ACCEPT_STATUE').setValue(tempObject.CHECK_ACCEPT_STATUE);
    	 Ext.getCmp('CHECK_RETURN_DATE').setValue(tempObject.CHECK_RETURN_DATE);
    	 Ext.getCmp('CHECK_RETURN_REASON').setValue(tempObject.CHECK_RETURN_REASON);
    	 Ext.getCmp('CHECK_FORFEIT_AMT').setValue(tempObject.CHECK_FORFEIT_AMT);
    	 Ext.getCmp('CHECK_FORFEIT_DATE').setValue(tempObject.CHECK_FORFEIT_DATE);
    	 Ext.getCmp('AGREE_CHECK_ROLLBACK').setValue(tempObject.AGREE_CHECK_ROLLBACK);
    	 Ext.getCmp('CHECK_PRINCIPAL_SIGN_TXT').setValue(tempObject.CHECK_PRINCIPAL_SIGN_TXT);
    	 Ext.getCmp('CHECK_PRINCIPAL_SIGN_DATE').setValue(tempObject.CHECK_PRINCIPAL_SIGN_DATE);
    	 if(tempObject.AGREE_RECHECK_BACKCHECK=="Y"){
    		 Ext.getCmp('AGREE_RECHECK_BACKCHECK').setValue(1);
    	 }else{
    		 Ext.getCmp('AGREE_RECHECK_BACKCHECK').setValue(0);
    	 }
    	 Ext.getCmp('CHECKOUT_PRINCIPAL_SIGN_NAME').setValue(tempObject.CHECKOUT_PRINCIPAL_SIGN_NAME);
    	 Ext.getCmp('PROJECT_PRINCIPAL_SIGN_NAME').setValue(tempObject.PROJECT_PRINCIPAL_SIGN_NAME);
    	 Ext.getCmp('PROJECT_PRINCIPAL_SIGN_DATE').setValue(tempObject.PROJECT_PRINCIPAL_SIGN_DATE);
 	    
    }
}); 