/*
 * File: app/controller/inspectioncon.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */
var picture_list = [];
var index1 = -1;
var zgxxindex1 = -1;
var fjindex1 = -1;
Ext
		.define(
				'HelcPDA.controller.inspection.inspectioncon',
				{
					extend : 'HelcPDA.controller.ApplicationController',

					config : {
						control : {
							// "button#inspection_syn": {
							// tap: 'inspection_syn'
							// },
							"button#inspection_new" : {
								tap : 'inspection_new'
							},
							"button#inspection_delete" : {
								tap : 'inspection_delete'
							},
							"button#inspection_update" : {
								tap : 'inspection_update'
							},
							"button#inspection_search" : {
								tap : 'inspection_search'
							},
							"button#lastpage" : {
								tap : 'lastpage'
							},
							"button#nextpage" : {
								tap : 'nextpage'
							},
							"button#nextpage" : {
								tap : 'nextpage'
							},
							"button#inspectionback" : {
								tap : 'inspectionback'
							},
							"list#inspectionlist" : {
								itemtap : 'inspectionlist'
							},
							"button#inspectionxx_back" : {
								tap : 'inspectionxx_back'
							},
							"list#inspectionlist" : {
								itemtap : 'inspectionlist'
							},
							"button#inspection_zgxx_back" : {
								tap : 'inspection_zgxx_back'
							},
							"button#inspectionxx_summit" : {
								tap : 'inspectionxx_summit'
							},
							"button#inspectionxm_new" : {
								tap : 'inspectionxm_new'
							},
							"list#inspectionzgxxlist" : {
								itemtap : 'inspectionzgxxlist'
							},
							"button#inspection_zgxx_update" : {
								tap : 'inspection_zgxx_update'
							},
							"button#inspection_zgxx_summit" : {
								tap : 'inspection_zgxx_summit'
							},
							"button#inspectionxm_delete" : {
								tap : 'inspectionxm_delete'
							},
							"list#inspectionfjlist" : {
								itemtap : 'inspectionfjlist'
							},
							"button#inspection_fj_back" : {
								tap : 'inspection_fj_back'
							},
							"button#nj_take_picture" : {
								tap : 'nj_take_picture'
							},
							"button#nj_see_picture" : {
								tap : 'nj_see_picture'
							},
							"list#picture_listV" : {
								itemtap : 'picture_listV'
							},
							"button#inspection_fj_uplode" : {
								tap : 'inspection_fj_uplode'
							},
							"button#inspectionfj_new" : {
								tap : 'inspectionfj_new'
							},
							"button#inspectionfj_delete" : {
								tap : 'inspectionfj_delete'
							},
							"button#search_dcl" : {
								tap : 'search_dcl'
							},
							"list#serach_dclList" : {
								itemtap : 'serach_dclList'
							},
							"button#search_nj" : {
								tap : 'search_nj'
							},
							"button#search_gh" : {
								tap : 'search_gh'
							},
							"button#search_njlist" : {
								tap : 'search_njlist'
							},
							"button#njlastpage" : {
								tap : 'njlastpage'
							},
							"button#njnextpage" : {
								tap : 'njnextpage'
							},
							"list#serach_ghllist" : {
								itemtap : "serach_ghllist"
							},
							"button#search_zgbj" : {
								tap : "search_zgbj"
							},
							"list#serach_zgllist" : {
								itemtap : "serach_zgllist"
							},

						}
					},
					//
					// inspection_syn: function(button, e, eOpts) {
					//
					// },
					inspection_new : function(button, e, eOpts) {
						Ext.Viewport.removeMenu('right');
						this.NextView('inspectionxx',
								'HelcPDA.view.inspection.inspection_xx');
						Ext.getCmp('CreatetdFullName').setValue(usernames);
						Ext.getCmp('ymtype').setValue('new');
						console.log(Ext.getCmp('inspectionxx_menu'))

					},
					inspection_delete : function(button, e, eOpts) {
						var obj = this;
						var count = 0;
						var cb = document.getElementsByName('ipd_ENO_Checkbox');
						for (var i = 0; i < cb.length; i++) {
							if (cb[i].className == 'p_judge_box') {
								count++;
							}

						}
						if (count == cb.length) {
							Ext.Msg.alert('提示', '请先选择选项！');
							return;
						}
						var tstore = this.getStore('inspectionlistStore',
								'HelcPDA.store.inspection.inspectionlistStore');
						var njid = tstore.getAt(index1).get('Id');
						console.log("njid:" + njid);
						var pam = {};
						pam.userid = njuserid;
						pam.PrimaryRowId = njid;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "DeleteAnn";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);
							var ress = res;
							res = res.DeleteAnn_Output;
							if (res.ErrorCode == "0x0") {
								Ext.Msg.alert('提示', '操作成功！');
								return;
							} else {
								Ext.Msg.alert('提示', '操作失败！'
										+ ress.Fault.faultstring);
							}
						}
						obj.getGHJ(obj, getresult, cs);

					},
					inspection_update : function(button, e, eOpts) {
						Ext.Viewport.removeMenu('right');
						var arr = [ 'AssetDomainName', 'LoginId',
								'AgentProcessId', 'AnnualSurveySituation',
								'AnnualInspectionYear', 'AgentProcesser',
								'WriteBackFlag', 'AnnualInspectionMonth',
								'AssetNumber', 'Id', 'CreatetdFullName',
								'AnnualInspectionDay', 'AgentReadOnlyFlag',
								'AssetId', 'AnnualInspectionRQ' ];
						for (var i = 0; i < arr.length; i++) {
							Ext.getCmp(arr[i]).setReadOnly(false);
						}
						Ext.getCmp('ymtype').setValue('update');
						Ext.getCmp('search_gh').setHidden(false);
						Ext.getCmp('search_dcl').setHidden(false);
						var dclflag = Ext.getCmp('ddclfalg').getValue();
						if (dclflag == '1') {
							Ext.getCmp('AgentProcesser').setReadOnly(false);
						} else {
							Ext.getCmp('ddclfalg').setValue('0');
							Ext.getCmp('AgentProcesser').setReadOnly(true);
						}

					},
					inspection_search : function(button, e, eOpts) {

					},
					lastpage : function(button, e, eOpts) {
						var obj = this;
						var lx = Ext.getCmp('opt_nj').getValue();
						var opvalue = Ext.getCmp('sear_nj').getValue();
						var ty = null;
						if (lx == "gh") {
							ty = "Asset Number";
						} else if (lx == "dpmc") {
							ty = "Asset Domain Name";
						} else if (lx == "njn") {
							ty = "Annual Inspection Year";
						} else if (lx == "tgqk") {
							ty = "Annual Survey Situation";
						} else {
							ty = "";
						}

						console.log(Ext.getCmp('njlbys').getValue());
						var ys = parseInt(Ext.getCmp('njlbys').getValue()) - 1;
						if (ys == -1) {
							Ext.Msg.alert('提示', '已经是首页了！');
							return;
						}

						var pam = {};
						if (ty != "")
							pam.SearchSpec = "[HEL Asset Annual Inspection Information."
									+ ty + "] LIKE '*" + opvalue + "*'";
						else
							pam.SearchSpec = "";
						pam.StartRowNum = ys * 10 + "";
						pam.Flag = true;
						pam.userid = njuserid;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "QueryPageAnn";
						cs.parameters = pam;

						function getresult(res) {

							var rearr = res.QueryPageAnn_Output.ListOfHelEaiAppAnnualInspection.HelAssetAnnualInspectionInformation;

							var tstore = obj
									.getStore('inspectionlistStore',
											'HelcPDA.store.inspection.inspectionlistStore');
							tstore.setData(rearr);
							Ext.getCmp('njlbys').setValue(ys);
							console.log(rearr);
						}
						obj.getGHJ(obj, getresult, cs);

					},
					nextpage : function(button, e, eOpts) {
						console.log(Ext.getCmp('njlbys').getValue());
						var obj = this;
						var lx = Ext.getCmp('opt_nj').getValue();
						var opvalue = Ext.getCmp('sear_nj').getValue();
						var ty = null;
						if (lx == "gh") {
							ty = "Asset Number";
						} else if (lx == "dpmc") {
							ty = "Asset Domain Name";
						} else if (lx == "njn") {
							ty = "Annual Inspection Year";
						} else if (lx == "tgqk") {
							ty = "Annual Survey Situation";
						} else {
							ty = "";
						}

						var ys = parseInt(Ext.getCmp('njlbys').getValue()) + 1;
						var pam = {};
						if (ty != "")
							pam.SearchSpec = "[HEL Asset Annual Inspection Information."
									+ ty + "] LIKE '*" + opvalue + "*'";
						else
							pam.SearchSpec = "";
						pam.StartRowNum = ys * 10 + "";
						pam.Flag = true;
						pam.userid = njuserid;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "QueryPageAnn";
						cs.parameters = pam;

						function getresult(res) {

							var rearr = res.QueryPageAnn_Output.ListOfHelEaiAppAnnualInspection.HelAssetAnnualInspectionInformation;
							if (rearr == null || rearr == ''
									|| typeof (rearr) == "undefined") {
								Ext.Msg.alert('提示', '找不到对应数据！');
								return;
							}

							var tstore = obj
									.getStore('inspectionlistStore',
											'HelcPDA.store.inspection.inspectionlistStore');
							tstore.setData(rearr);
							Ext.getCmp('njlbys').setValue(ys);
							console.log(rearr);
						}
						obj.getGHJ(obj, getresult, cs);

					},
					inspectionback : function() {
						MainCtr.BackView();
						var tstore = this.getStore('inspectionlistStore',
								'HelcPDA.store.inspection.inspectionlistStore');
						tstore.setData(null);
					},
					inspectionlist : function(ob, index, target, record, e,
							eOpts) {
						var obj = this;
						if (event.target.id != "ipd_ENO_Checkbox") {
							var dclflag = Ext.getCmp('dclflag').getValue();
							this.NextView('inspectionxx',
									'HelcPDA.view.inspection.inspection_xx');
							var arr = [ 'AssetDomainName', 'LoginId',
									'AgentProcessId', 'AnnualSurveySituation',
									'AnnualInspectionYear', 'AgentProcesser',
									'WriteBackFlag', 'AnnualInspectionMonth',
									'AssetNumber', 'Id', 'CreatetdFullName',
									'AnnualInspectionDay', 'AgentReadOnlyFlag',
									'AssetId' ];
							for (var i = 0; i < arr.length; i++) {
								Ext.getCmp(arr[i]).setValue(record.get(arr[i]));
								Ext.getCmp(arr[i]).setReadOnly(true);
							}
							var AnnualInspectionYear = Ext.getCmp(
									'AnnualInspectionYear').getValue();
							var AnnualInspectionMonth = Ext.getCmp(
									'AnnualInspectionMonth').getValue();
							if (parseInt(AnnualInspectionMonth) < 10) {
								AnnualInspectionMonth = "0"
										+ AnnualInspectionMonth;
							}
							var AnnualInspectionDay = Ext.getCmp(
									'AnnualInspectionDay').getValue();
							Ext.getCmp('AnnualInspectionRQ').setValue(
									AnnualInspectionYear + "-"
											+ AnnualInspectionMonth + "-"
											+ AnnualInspectionDay);
							Ext.getCmp('AnnualInspectionRQ').setReadOnly(true);
							Ext.getCmp('search_gh').setHidden(true);
							Ext.getCmp('search_dcl').setHidden(true);
							Ext.getCmp('ymtype').setValue('ck');
							if (dclflag == '1') {
								Ext.getCmp('ddclfalg').setValue('1');
								Ext.getCmp('AgentProcesser').setReadOnly(false);
							} else {
								Ext.getCmp('ddclfalg').setValue('0');
							}
							// 带出整改项目信息
							var pam = {};
							pam.userid = njuserid;
							pam.InspectionId = Ext.getCmp('Id').getValue();
							// pam.InspectionId='1-Y2L45';
							pam.StartRowNum = 0;
							var cs = {};
							cs.adpName = "HttpAdapter_pda_nj";
							cs.prodName = "QueryPageRec";
							cs.parameters = pam;

							function getresult(res) {
								console.log(res);

								var rearr = res.QueryPageRec_Output.ListOfHELEAIAPPRectification.ListOfHelRectification.HelRectification;

								var tstore = obj
										.getStore('inspectionzgxxlistStore',
												'HelcPDA.store.inspection.inspectionzgxxlistStore');
								tstore.setData(rearr);

								console.log(rearr);
							}
							obj.getGHJ(obj, getresult, cs);

						} else {
							var cb = document
									.getElementsByName('ipd_ENO_Checkbox')[index];
							if (cb.className == 'p_judge_box_clicked') {
								cb.className = 'p_judge_box';

							} else {

								if (index1 != -1) {
									var cb1 = document
											.getElementsByName('ipd_ENO_Checkbox')[index1];
									cb1.className = 'p_judge_box';
								}
								cb.className = 'p_judge_box_clicked';
							}
							index1 = index;
							console.log("index1" + index1);
						}

					},
					inspectionxx_back : function() {
						this.BackView();
						var ty = Ext.getCmp('ymtype').getValue();
						if (ty.indexOf('ok') == -1) {
							return;
						}
						// 刷新年检信息
						var obj = this;
						var tstore = obj.getStore('inspectionlistStore',
								'HelcPDA.store.inspection.inspectionlistStore');
						tstore.setData(null);
						var pam = {};
						pam.SearchSpec = "";
						pam.StartRowNum = "0";
						pam.Flag = true;
						pam.userid = njuserid;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "QueryPageAnn";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);

							var rearr = res.QueryPageAnn_Output.ListOfHelEaiAppAnnualInspection.HelAssetAnnualInspectionInformation;
							if (rearr == null || rearr == ''
									|| typeof (rearr) == "undefined") {
								Ext.Msg.alert('提示', '找不到对应数据！');
								return;
							}
							var tstore = obj
									.getStore('inspectionlistStore',
											'HelcPDA.store.inspection.inspectionlistStore');
							tstore.setData(rearr);
							Ext.getCmp('njlbys').setValue(0);

						}
						obj.getGHJ(obj, getresult, cs);

					},
					inspection_zgxx_back : function() {
						this.BackView();
						// 刷新整改信息
						var ty = Ext.getCmp('zgxxymtype').getValue();
						if (ty.indexOf('ok') == -1) {
							return;
						}
						var obj = this;
						var tstore = obj
								.getStore('inspectionzgxxlistStore',
										'HelcPDA.store.inspection.inspectionzgxxlistStore');
						tstore.setData(null);
						var pam = {};
						pam.userid = njuserid;
						pam.InspectionId = Ext.getCmp('AnnualInspectionId')
								.getValue();
						// pam.InspectionId='1-Y2L45';
						pam.StartRowNum = 0;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "QueryPageRec";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);

							var rearr = res.QueryPageRec_Output.ListOfHELEAIAPPRectification.ListOfHelRectification.HelRectification;

							var tstore = obj
									.getStore('inspectionzgxxlistStore',
											'HelcPDA.store.inspection.inspectionzgxxlistStore');
							tstore.setData(rearr);

							console.log(rearr);
						}
						obj.getGHJ(obj, getresult, cs);

					},
					inspection_init : function(obj) {
						var pam = {};
						pam.SearchSpec = "";
						pam.StartRowNum = "0";
						pam.Flag = true;
						pam.userid = njuserid;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "QueryPageAnn";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);

							var rearr = res.QueryPageAnn_Output.ListOfHelEaiAppAnnualInspection.HelAssetAnnualInspectionInformation;
							if (rearr == null || rearr == ''
									|| typeof (rearr) == "undefined") {
								Ext.Msg.alert('提示', '找不到对应数据！');
								return;
							}
							var tstore = obj
									.getStore('inspectionlistStore',
											'HelcPDA.store.inspection.inspectionlistStore');
							tstore.setData(rearr);
							// 页数
							Ext.getCmp('njlbys').setValue(0);

						}
						obj.getGHJ(obj, getresult, cs);

						// 判断待处理人
						var cs1 = {};
						var pam1 = {};
						pam1.userid = njuserid;
						pam1.Id = 'DCL001';
						cs1.adpName = "HttpAdapter_pda_nj";
						cs1.prodName = "QueryEmp";
						cs1.parameters = pam1;

						function getresult1(res) {
							console.log('res', res);
							var ress = res.QueryEmpType_Output.NumOutputObjects;
							if (ress == "1") {
								Ext.getCmp('dclflag').setValue('1');
							} else {
								Ext.getCmp('dclflag').setValue('0');
							}
						}
						obj.getGHJ(obj, getresult1, cs1);

					},
					inspectionxx_summit : function() {
						var obj = this;
						if(Ext.getCmp('AnnualSurveySituation').getValue()==""){
							Ext.Msg.alert('提示',"请输入必填项！");
							return;
						}
						var pam = {};
						if (Ext.getCmp('ymtype').getValue == 'new') {
							pam.Id = "";
						} else if (Ext.getCmp('ymtype').getValue == 'update') {
							pam.Id = Ext.getCmp('Id').getValue();
						} else {
							pam.Id = Ext.getCmp('Id').getValue();
						}
						var AnnualInspectionRQ = Ext.getCmp(
								'AnnualInspectionRQ').getValue();
						var sp = AnnualInspectionRQ.split('-');
						Ext.getCmp('AnnualInspectionYear').setValue(sp[0]);
						Ext.getCmp('AnnualInspectionMonth').setValue(sp[1]);
						Ext.getCmp('AnnualInspectionDay').setValue(sp[2]);
						pam.userid = njuserid;
						pam.AgentProcesser = Ext.getCmp('AgentProcesser')
								.getValue();
						pam.AgentReadOnlyFlag = Ext.getCmp('AgentReadOnlyFlag')
								.getValue();
						pam.AnnualInspectionDay = Ext.getCmp(
								'AnnualInspectionDay').getValue();
						pam.AnnualInspectionMonth = Ext.getCmp(
								'AnnualInspectionMonth').getValue();
						pam.AnnualInspectionYear = Ext.getCmp(
								'AnnualInspectionYear').getValue();
						pam.AnnualSurveySituation = Ext.getCmp(
								'AnnualSurveySituation').getValue();
						pam.AssetDomainName = Ext.getCmp('AssetDomainName')
								.getValue();
						pam.AssetId = Ext.getCmp('AssetId').getValue();
						pam.AssetNumber = Ext.getCmp('AssetNumber').getValue();
						pam.CreatetdFullName = Ext.getCmp('CreatetdFullName')
								.getValue();
						pam.WriteBackFlag = Ext.getCmp('WriteBackFlag')
								.getValue();

						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "SynchronizeAnn";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);
							var ress = res;
							var res = res.SynchronizeAnn_Output;
							if (res.ErrorCode == "0x0") {
								Ext.getCmp('Id').setValue(res.PrimaryRowId);
								var arr = [ 'AssetDomainName', 'LoginId',
										'AgentProcessId',
										'AnnualSurveySituation',
										'AnnualInspectionYear',
										'AgentProcesser', 'WriteBackFlag',
										'AnnualInspectionMonth', 'AssetNumber',
										'Id', 'CreatetdFullName',
										'AnnualInspectionDay',
										'AgentReadOnlyFlag', 'AssetId' ];
								for (var i = 0; i < arr.length; i++) {
									Ext.getCmp(arr[i]).setReadOnly(true);
								}
								if (Ext.getCmp('ymtype').getValue() == "new")
									Ext.getCmp('ymtype').setValue('newok');
								else
									Ext.getCmp('ymtype').setValue('updateok');
								Ext.Msg.alert("提示", "操作成功！");
								Ext.getCmp('search_gh').setHidden(true);
								Ext.getCmp('search_dcl').setHidden(true);

							} else {
								Ext.Msg.alert("提示", "操作失败！"
										+ ress.Fault.faultstring);
								return;
							}
						}
						obj.getGHJ(obj, getresult, cs);
						Ext.Viewport.removeMenu('right');
					},
					inspectionxm_new : function() {
						var njid = Ext.getCmp('Id').getValue();
						console.log(njid);
						this.NextView('inspection_zgxx',
								'HelcPDA.view.inspection.inspection_zgxx');
						Ext.Viewport.removeMenu('right');
						Ext.getCmp('zgxxymtype').setValue('zgxxnew');
						Ext.getCmp('AnnualInspectionId').setValue(njid);
						Ext.getCmp('UpdateFullName').setValue(usernames);
						Ext.getCmp('search_zgbj').setHidden(false);

					},
					inspectionzgxxlist : function(ob, index, target, record, e,
							eOpts) {
						var obj = this;
						if (event.target.id != "ipd_ENO_Checkbox1") {
							obj.NextView('inspection_zgxx',
									'HelcPDA.view.inspection.inspection_zgxx');
							var arr = [ 'RectificationConent',
									'RectificationParts',
									'ResponsibiltyCategory',
									'RecfiticationFinishDate',
									'UpdateFullName', 'Comments',
									'SystemUpdate', 'AnnualInspectionId',
									'MachineId', 'Id' ];
							for (var i = 0; i < arr.length; i++) {
								Ext.getCmp(arr[i]).setValue(record.get(arr[i]));
								Ext.getCmp(arr[i]).setReadOnly(true);
								if (arr[i] == 'RecfiticationFinishDate') {
									Ext
											.getCmp('RecfiticationFinishDate')
											.setValue(
													Ext.Date
															.format(
																	new Date(
																			Ext
																					.getCmp(
																							'RecfiticationFinishDate')
																					.getValue()),
																	'Y-m-d'));
								}
							}
							Ext.getCmp('zgxxymtype').setValue('zgxxck');
							// 隐藏搜索按钮
							Ext.getCmp('search_zgbj').setHidden(true);
							// 带出附件信息
							var pam = {};
							pam.Id = Ext.getCmp('Id').getValue();
							pam.userid = njuserid;
							// pam.Id='1-R02SYP';
							pam.StartRowNum = 0;
							var cs = {};
							cs.adpName = "HttpAdapter_pda_nj";
							cs.prodName = "QueryPageAttT";
							cs.parameters = pam;

							function getresult(res) {
								console.log(res);

								var rearr = res.QueryPageRecAtt_Output.ListOfHELEAIAPPRectificationAttachment.ListOfHelRectificationAttachment.HelRectificationAttachment;

								var tstore = obj
										.getStore('inspectionfjlistStore',
												'HelcPDA.store.inspection.inspectionfjlistStore');
								tstore.setData(rearr);

								console.log(rearr);
							}
							obj.getGHJ(obj, getresult, cs);

						} else {
							var cb = document
									.getElementsByName('ipd_ENO_Checkbox1')[index];
							if (cb.className == 'p_judge_box_clicked') {
								cb.className = 'p_judge_box';

							} else {

								if (zgxxindex1 != -1) {
									var cb1 = document
											.getElementsByName('ipd_ENO_Checkbox1')[zgxxindex1];
									cb1.className = 'p_judge_box';
								}
								cb.className = 'p_judge_box_clicked';
							}
							zgxxindex1 = index;
							console.log("zgxxindex1" + zgxxindex1);
						}
					},
					inspection_zgxx_update : function() {
						Ext.Viewport.removeMenu('right');
						Ext.getCmp('zgxxymtype').setValue('zgxxupdate');
						var arr = [ 'RectificationConent',
								'RectificationParts', 'ResponsibiltyCategory',
								'RecfiticationFinishDate', 'UpdateFullName',
								'Comments', 'SystemUpdate',
								'AnnualInspectionId', 'MachineId', 'Id' ];
						for (var i = 0; i < arr.length; i++) {
							Ext.getCmp(arr[i]).setReadOnly(false);
						}
						Ext.getCmp('search_zgbj').setHidden(false);

					},
					inspection_zgxx_summit : function() {
						Ext.Viewport.removeMenu('right');
						if (Ext.getCmp('RectificationConent').getValue() == ""
								|| Ext.getCmp('RectificationParts').getValue() == ""
								|| Ext.getCmp('ResponsibiltyCategory')
										.getValue() == "") {
							Ext.Msg.alert('提示', '请先填写必填项！');
							return;
						}

						var obj = this;
						var pam = {};
						if (Ext.getCmp('zgxxymtype').getValue == 'zgxxnew') {
							pam.Id = "";
							pam.MachineId = "";
						} else if (Ext.getCmp('zgxxymtype').getValue == 'zgxxupdate') {
							pam.Id = Ext.getCmp('Id').getValue();
							pam.MachineId = Ext.getCmp('MachineId').getValue();
						} else {
							pam.Id = Ext.getCmp('Id').getValue();
							pam.MachineId = Ext.getCmp('MachineId').getValue();
						}
						pam.userid = njuserid;
						pam.AnnualInspectionId = Ext.getCmp(
								'AnnualInspectionId').getValue();
						pam.Comments = Ext.getCmp('Comments').getValue();
						pam.RecfiticationFinishDate = Ext.Date.format(new Date(
								Ext.getCmp('RecfiticationFinishDate')
										.getValue()), 'm/d/Y H:i:s');
						pam.RectificationConent = Ext.getCmp(
								'RectificationConent').getValue();
						pam.RectificationParts = Ext.getCmp(
								'RectificationParts').getValue();
						pam.ResponsibiltyCategory = Ext.getCmp(
								'ResponsibiltyCategory').getValue();
						pam.SystemUpdate = Ext.getCmp('SystemUpdate')
								.getValue();
						pam.UpdateFullName = Ext.getCmp('UpdateFullName')
								.getValue();

						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "SynchronizeRec";
						cs.parameters = pam;
						console.log(pam);
						function getresult(res) {
							console.log(res);
							var ress = res.SynchronizeRec_Output;
							if (ress != null) {
								if (ress.ErrorCode == "0x0") {
									Ext.getCmp('Id')
											.setValue(ress.PrimaryRowId);
									var arr = [ 'RectificationConent',
											'RectificationParts',
											'ResponsibiltyCategory',
											'RecfiticationFinishDate',
											'UpdateFullName', 'Comments',
											'SystemUpdate',
											'AnnualInspectionId', 'MachineId',
											'Id' ];
									for (var i = 0; i < arr.length; i++) {
										Ext.getCmp(arr[i]).setReadOnly(true);
									}
									if (Ext.getCmp('zgxxymtype').getValue() == "zgxxnew")
										Ext.getCmp('zgxxymtype').setValue(
												'zgxxnewok');
									else
										Ext.getCmp('zgxxymtype').setValue(
												'zgxxupdateok');
									Ext.getCmp('search_zgbj').setHidden(true);
									Ext.Msg.alert("提示", "操作成功！");

								} else {
									Ext.Msg.alert("提示", "操作失败！");
									return;
								}
							} else {
								ress = res.Fault.faultstring;
								// if(ress.indexOf('具有相同值的记录')!=-1){
								Ext.Msg.alert("提示", ress);
								return;
								// }

							}
						}
						obj.getGHJ(obj, getresult, cs);

					},
					inspectionxm_delete : function() {
						Ext.Viewport.removeMenu('right');
						var obj = this;
						var count = 0;
						var cb = document
								.getElementsByName('ipd_ENO_Checkbox1');
						for (var i = 0; i < cb.length; i++) {
							if (cb[i].className == 'p_judge_box') {
								count++;
							}

						}
						if (count == cb.length) {
							Ext.Msg.alert('提示', '请先选择选项！');
							return;
						}
						var tstore = obj
								.getStore('inspectionzgxxlistStore',
										'HelcPDA.store.inspection.inspectionzgxxlistStore');
						var njid = tstore.getAt(zgxxindex1).get('Id');
						console.log("njid:" + njid);
						var pam = {};
						pam.userid = njuserid;
						pam.PrimaryRowId = njid;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "DeleteRec";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);
							var ress = res;
							res = res.DeleteRec_Output;
							if (res.ErrorCode == "0x0") {
								Ext.Msg.alert('提示', '操作成功！');

								return;
							} else {
								Ext.Msg.alert('提示', '操作失败！'
										+ ress.Fault.faultstring);
							}
						}
						obj.getGHJ(obj, getresult, cs);

					},
					inspectionfjlist : function(ob, index, target, record, e,
							eOpts) {
						var obj = this;
						if (event.target.id != "ipd_ENO_Checkbox2") {
							this.NextView('inspection_fj',
									'HelcPDA.view.inspection.inspection_fj');
							var arr = [ 'RecFileName', 'DocumentType',
									'Comment', 'RecFileExt', 'RecFileSize',
									'Comments', 'RectificationId' ];
							for (var i = 0; i < arr.length; i++) {
								Ext.getCmp(arr[i]).setValue(record.get(arr[i]));
							}
							var tempPic = {};
							var data = record.get('RecFileBuffer').CDATA;
							tempPic.base64src = data;
							tempPic.src = "data:image/jpeg;base64," + data;// "data:image/jpeg;base64,"
																			// +
							console.log("data:image/jpeg;base64," + data);
							picture_list.push(tempPic);
							var length = picture_list.length;
							Ext.getCmp('picture_listV').setHeight(
									length == 0 ? 0 : (length + 1) * 35);
							var store = obj
									.getStore('jobContactBook_Store',
											'HelcPDA.store.inspection.jobContactBook_Store');
							store.setData(picture_list);

						} else {
							var cb = document
									.getElementsByName('ipd_ENO_Checkbox2')[index];
							if (cb.className == 'p_judge_box_clicked') {
								cb.className = 'p_judge_box';

							} else {

								if (fjindex1 != -1) {
									var cb1 = document
											.getElementsByName('ipd_ENO_Checkbox2')[fjindex1];
									cb1.className = 'p_judge_box';
								}
								cb.className = 'p_judge_box_clicked';
							}
							fjindex1 = index;
							console.log("fjindex1" + fjindex1);
						}
					},
					inspection_fj_back : function() {
						this.BackView();
						picture_list = [];
						// 刷新附件信息
						var ty = Ext.getCmp('fjymtype').getValue();
						if (ty.indexOf('ok') == -1) {
							return;
						}
						var obj = this;
						var tstore = obj
								.getStore('inspectionfjlistStore',
										'HelcPDA.store.inspection.inspectionfjlistStore');
						tstore.setData(null);
						var pam = {};
						pam.Id = Ext.getCmp('RectificationId').getValue();
						pam.userid = njuserid;
						// pam.Id='1-R02SYP';
						pam.StartRowNum = 0;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "QueryPageAttT";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);

							var rearr = res.QueryPageRecAtt_Output.ListOfHELEAIAPPRectificationAttachment.ListOfHelRectificationAttachment.HelRectificationAttachment;

							var tstore = obj
									.getStore('inspectionfjlistStore',
											'HelcPDA.store.inspection.inspectionfjlistStore');
							tstore.setData(rearr);

							console.log(rearr);
						}
						obj.getGHJ(obj, getresult, cs);

					},
					nj_take_picture : function() {
						if (picture_list.length == 1) {
							Ext.Msg.alert('提示', '只能上传一个附件！');
							return;
						}
						var obj = this;
						var store = obj
								.getStore('jobContactBook_Store',
										'HelcPDA.store.inspection.jobContactBook_Store');
			
						var v_source = 'CAMEAR';
						var parm = {
							callback : function(filename) {
								if (filename != '') {
									 var tempPic={};
									 tempPic.base64src=filename;
									 tempPic.src= "data:image/png;base64," +
									 filename;//"data:image/jpeg;base64," +
									 console.log("data:image/png;base64," +
											 filename);
									 picture_list.push(tempPic);
									 var length=picture_list.length;
									 Ext.getCmp('picture_listV').setHeight(length==0?0:(length+1)*35);
									 store.setData(picture_list);
								}
							},
							source : v_source,
							direction : 'BACK',
						};
						phone.takePhoto(parm);

					},
					nj_see_picture : function() {
						if (picture_list.length == 1) {
							Ext.Msg.alert('提示', '只能上传一个附件！');
							return;
						}

						var obj = this;
						var store = obj
								.getStore('jobContactBook_Store',
										'HelcPDA.store.inspection.jobContactBook_Store');

						var v_source = 'ALBUM';
						var parm = {
							callback : function(filename) {
								if (filename != '') {
									var tempPic = {};
									tempPic.base64src = filename;
									tempPic.src = "data:image/jpeg;base64,"
											+ filename; // "data:image/jpeg;base64,"
													// +
									// alert("data:image/jpeg;base64," + data);
									picture_list.push(tempPic);
									var length = picture_list.length;
									Ext
											.getCmp('picture_listV')
											.setHeight(
													length == 0 ? 0
															: (length + 1) * 35);
									store.setData(picture_list);
								}
							},
							source : v_source,
							direction : 'BACK',
						};
						phone.takePhoto(parm);

					},
					// 点击删除一张图片
					picture_listV : function(obj, index, target, record, e,
							eOpts) {
						// var
						// cs=[{'filename':'1.jpg','filecode':'/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAdACkDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6prldT+IPhTStan0nVPEOmWGowIskkN3cLDtDcjliBkgg4znBBxXVVw3jT4U+DvGmppqPiLRY7q+VBH5yzSxMVHTOxhnHvmgC3/wsnwR/0OHhz/waQf8AxVfPfxd8Twah+0J4d1Dwj4o0CCSLRZIo9Tnuo5LS3lK3XDsCVBIZQAc8svB6HuvEPwu+Cvh+5W31bS0gnYbvLF3eOQPUhXOPxrynxN4R+H0HxO0q50jTmuPBMdmftlrHNOJJZz5oG0yMGGMwnhgMD61nKrTi7OSO2jluLrpSpUpNPZ2dvv2PZv2c/HmveK28T6T4nvLDUrrRZ4kTUbEoY7hX8wZBQBSP3eQQBw3IBFezfLXz78OfE3gDwVqV7/wjGjapYQ6isEcsbEygMjSYb5pGbkSYwPTpX0HRGpCXwszxOCr4VpV4ON9roK5fx14MsfGNtbQahcXcCQMzr9ncDOQOoIIPT0rp6XtVSipKz2MaVadGaqU3ZrZnA+GfhV4b0RpWa3OpNJgA3wWQIPYYA/SvKvhjbTeOfjgfFOi6SdH8I6AktpCvleULmYq6ElePmxISeOAqg8mvpOmhQBwKUYRj8KNK2Lr15OVWbbfmPoooqzA//9k='}];
						if (e.target.id == "2") {
							var store = this
									.getStore('jobContactBook_Store',
											'HelcPDA.store.inspection.jobContactBook_Store');
							picture_list.splice(index, 1);
							store.setData(picture_list);
						}

					},
					inspection_fj_uplode : function() {
						var obj = this;
						var store = this
								.getStore('jobContactBook_Store',
										'HelcPDA.store.inspection.jobContactBook_Store');
			
						if(Ext.getCmp('RecFileName').getValue()==''||Ext.getCmp('DocumentType').getValue()==''||Ext.getCmp('Comment').getValue()==''||store.getCount()==0){
							Ext.Msg.alert("提示","请输入必填项！");
							return;
						}
						var pam = {};
						pam.userid = njuserid;
						pam.DocumentType = Ext.getCmp('DocumentType')
								.getValue();
						pam.RecFileName = Ext.getCmp('RecFileName').getValue();
						pam.Comment = Ext.getCmp('Comment').getValue();
						pam.RecFileExt = 'png';
						pam.RecFileSize = "";
						pam.RectificationId = Ext.getCmp('RectificationId')
								.getValue();
						pam.RecFileBuffer = store.getAt(0).get('base64src');

						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "UpsertAttT";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);
							var ress = res.UpsertRecAtt_Output;
							if (ress != null) {
								
								//if (ress.ErrorCode == "0x0") {
					            if(ress.PrimaryRowId){
					            	Ext.Msg.alert("提示", "操作成功！");
									Ext.getCmp('fjymtype').setValue('ok');
									obj.inspection_fj_back();
								
								} else {
									Ext.Msg.alert("提示", "操作失败！"
											+ res.Fault.faultstring);
									return;

								}
							} else {
								ress = res.Fault.faultstring;
								// if(ress.indexOf('具有相同值的记录')!=-1){
								Ext.Msg.alert("提示", ress);
								return;
								// }

							}
						}
						obj.getGHJ(obj, getresult, cs);
					},
					inspectionfj_new : function() {
						Ext.Viewport.removeMenu('right');
						var zgid = Ext.getCmp('Id').getValue();
						this.NextView('inspection_fj',
								'HelcPDA.view.inspection.inspection_fj');
						Ext.getCmp('RectificationId').setValue(zgid);
					},
					inspectionfj_delete : function() {
						Ext.Viewport.removeMenu('right');
						var obj = this;
						var count = 0;
						var cb = document
								.getElementsByName('ipd_ENO_Checkbox2');
						for (var i = 0; i < cb.length; i++) {
							if (cb[i].className == 'p_judge_box') {
								count++;
							}

						}
						if (count == cb.length) {
							Ext.Msg.alert('提示', '请先选择选项！');
							return;
						}
						var tstore = obj
								.getStore('inspectionfjlistStore',
										'HelcPDA.store.inspection.inspectionfjlistStore');
						var njid = tstore.getAt(fjindex1).get('RecFileBuffer').ContentId;
						console.log("njid:" + njid);
						var pam = {};
						pam.userid = njuserid;
						pam.PrimaryRowId = njid;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "DeleteAttT";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);
							var ress = res;
							res = res.DeleteRec_Output;
							if (res.ErrorCode == "0x0") {
								Ext.Msg.alert('提示', '操作成功！');

								return;
							} else {
								Ext.Msg.alert('提示', '操作失败！'
										+ ress.Fault.faultstring);
							}
						}
						obj.getGHJ(obj, getresult, cs);
					},
					search_dcl : function() {
						var obj = this;
						var getresult = function(res) {

							var PanelId = 'dcllist';
							var ListArray = {};
							ListArray.id = 'serach_dclList';
							ListArray.StoreName = 'dcllistStore';
							ListArray.StoreFullName = 'HelcPDA.store.inspection.dcllistStore';
							// ListArray.StoreParam=["FullName"];

							var opt = [ {
								text : '请选择',
								value : ''
							}, {
								text : '用户名',
								value : 'FullName'
							}, {
								text : '用户ID',
								value : 'LoginName'
							}, {
								text : '职责',
								value : 'Responsibility2'
							},
							// {text: '组织', value: 'Organization2'},
							{
								text : '职位',
								value : 'Position2'
							}, ];
							var tpl = '';
							tpl += '<table border=0 width=100% style="color:#666">'
									+ '<tr>'
									+ '                <td width=50%>'
									+ '                    <b>用户名:</b>{FullName} '
									+ '                </td>'
									+ '                <td width=50%><b>用户ID:</b>{LoginName}</td>'
									+

									'                </tr> '
									+ '                <tr>'
									+ '                <td width=50%><b>职责:</b>{Responsibility2}</td>'
									+ '                <td    width=50%>'
									+ '                   <b>组织:</b>{Organization2} '
									+ '                </td>'
									+ '                </tr>'
									+ '                <tr>'
									+ '                <td colspan=2><b>职位:</b>{Position2} </td>'
									+ '                </tr>' + '    </table>';

							var Data = res.QueryPageEmp_Output.ListOfHelEaiAppEmployeeDetailsInformation.Employee;
							obj.getnjlist(PanelId, ListArray, Data, tpl, opt);
						};

						var pam = {};
						pam.userid = njuserid;
						pam.SearchSpec = "";
						pam.StartRowNum = "0";
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "QueryPageEmp";
						cs.parameters = pam;
						obj.getGHJ(obj, getresult, cs);
					},
					// 创建一个显示在页面的list
					getnjlist : function(PanelId, ListArray, Data, tpl, opt) {
						var obj = this;
						var Panel = Ext.getCmp('Panel_List_Id');
						if (Panel) {
							Panel.destroy();
						}
						if (!lists) {
							var lists = Ext.Viewport.add({
								xtype : 'panel',
								id : 'Panel_List_Id',
								style : 'height:80%;width:90%;',
								hideOnMaskTap : true,
								centered : true,
								modal : true,

								items : [ {
									xtype : 'toolbar',
									items : [ {
										xtype : 'selectfield',
										width : '30%',
										id : 'njst',
										options : opt
									}, {
										xtype : 'searchfield',
										id : 'njsh',
										width : '60%',
									}, {
										xtype : 'button',
										style : 'border:0;',
										width : '10%',
										iconCls : 'search',
										id : 'search_njlist',
										text : ''
									} ]
								}, {
									xtype : 'fieldset',
									style : 'height:100%;width:100%;',
									items : [ {
										xtype : 'list',
										id : ListArray.id,
										store : ListArray.StoreName,
										height : '100%',
										itemTpl : [ tpl ]
									} ]
								},

								{
									xtype : 'toolbar',
									items : [ {
										xtype : 'button',
										html : '上一页',
										id : 'njlastpage',
										text : 'MyButton'
									}, {
										xtype : 'spacer'
									}, {
										xtype : 'button',
										id : 'njnextpage',
										html : '下一页',
										text : 'MyButton1'
									} ]
								}, {
									xtype : 'hiddenfield',
									id : 'njhid',
									value : PanelId,
								}, {
									xtype : 'hiddenfield',
									id : 'njhpg',
									value : "0"
								}, ]
							});
							lists.show();
						}
						var store = obj.getStore(ListArray.StoreName,
								ListArray.StoreFullName);
						console.log(Data);
						store.setData(Data);
						// console.log(Ext.getCmp('njhid').getValue());
					},
					serach_dclList : function(ob, index, target, record, e,
							eOpts) {
						var name = record.get('FullName');
						var Id = record.get('Id');
						Ext.getCmp('AgentProcesser').setValue(name);
						Ext.getCmp('AgentProcessId').setValue(Id);
						var Panel = Ext.getCmp('Panel_List_Id');
						if (Panel) {
							Panel.destroy();
						}
					},
					search_nj : function() {
						var obj = this;
						var lx = Ext.getCmp('opt_nj').getValue();
						var opvalue = Ext.getCmp('sear_nj').getValue();
						var ty = null;
						if (lx == "gh") {
							ty = "Asset Number";
						} else if (lx == "dpmc") {
							ty = "Asset Domain Name";
						} else if (lx == "njn") {
							ty = "Annual Inspection Year";
						} else if (lx == "tgqk") {
							ty = "Annual Survey Situation";
						} else {
							ty = "";
						}

						var pam = {};
						if (ty != "")
							pam.SearchSpec = "[HEL Asset Annual Inspection Information."
									+ ty + "] LIKE '*" + opvalue + "*'";
						else
							pam.SearchSpec = "";
						pam.StartRowNum = "0";
						pam.Flag = true;
						pam.userid = njuserid;
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "QueryPageAnn";
						cs.parameters = pam;

						function getresult(res) {
							console.log(res);

							var rearr = res.QueryPageAnn_Output.ListOfHelEaiAppAnnualInspection.HelAssetAnnualInspectionInformation;
							if (rearr == null || rearr == ''
									|| typeof (rearr) == "undefined") {
								Ext.Msg.alert('提示', '找不到对应数据！');
								return;
							}
							var tstore = obj
									.getStore('inspectionlistStore',
											'HelcPDA.store.inspection.inspectionlistStore');
							tstore.setData(rearr);
							// 页数
							Ext.getCmp('njlbys').setValue(0);

						}
						obj.getGHJ(obj, getresult, cs);

					},
					search_gh : function() {
						var obj = this;
						var getresult = function(res) {

							var PanelId = 'ghllist';
							var ListArray = {};
							ListArray.id = 'serach_ghllist';
							ListArray.StoreName = 'ghllistStore';
							ListArray.StoreFullName = 'HelcPDA.store.inspection.ghllistStore';
							// ListArray.StoreParam=["FullName"];

							var opt = [ {
								text : '请选择',
								value : ''
							}, {
								text : '工号',
								value : 'gh'
							}, {
								text : '梯形',
								value : 'tx'
							}, {
								text : '梯种',
								value : 'tz'
							}, {
								text : '所属司',
								value : 'sss'
							}, {
								text : '地盘',
								value : 'dpmc'
							}, ];
							var tpl = '';
							tpl += '<table border=0 width=100% style="color:#666">'
									+ '<tr>'
									+ '                <td width=50%>'
									+ '                    <b>工号:</b>{AssetNumber} '
									+ '                </td>'
									+ '                <td width=50%><b>梯型:</b>{ProductPart}</td>'
									+

									'                </tr> '
									+ '                <tr>'
									+ '                <td width=50%><b>梯种:</b>{ProductName}</td>'
									+ '                <td    width=50%>'
									+ '                   <b>所属司:</b>{CompanyOrganization} '
									+ '                </td>'
									+ '                </tr>'
									+ '                <tr>'
									+ '                <td colspan=2><b>地盘:</b>{AssetDomainName}</td>'
									+ '                </tr>' + '    </table>';

							// var
							// Data=res.QueryPageAssetInf_Output.ListOfHelEaiAppAssetManagementInformation.ListOfAssetMgmt-Asset.AssetMgmt-Asset;
							var Data = res.QueryPageAssetInf_Output.ListOfHelEaiAppAssetManagementInformation;
							Data = Data['ListOfAssetMgmt-Asset'];
							Data = Data['AssetMgmt-Asset'];
							// console.log(Data);
							obj.getnjlist(PanelId, ListArray, Data, tpl, opt);
						};

						var pam = {};
						pam.userid = njuserid;
						pam.SearchSpec = "";
						pam.StartRowNum = "0";
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "QueryPageAssetInf";
						cs.parameters = pam;
						obj.getGHJ(obj, getresult, cs);

					},
					search_njlist : function() {
						var obj = this;
						var njhid = Ext.getCmp('njhid').getValue();
						var lx = Ext.getCmp('njst').getValue();
						var opvalue = Ext.getCmp('njsh').getValue()
						var ty = null;
						if (lx == "gh") {
							ty = "Asset Number";
						} else if (lx == "dpmc") {
							ty = "Asset Domain Name";
						} else if (lx == "tz") {
							ty = "Product Name";
						} else if (lx == "tx") {
							ty = "Product Part";
						} else if (lx == "sss") {
							ty = "Company Organization";
						} else if (lx == "FullName") {
							ty = "Full Name";
						} else if (lx == "LoginName") {
							ty = "Login Name";
						} else if (lx == "Responsibility2") {
							ty = "Responsibility";
						} else if (lx == "Position2") {
							ty = "Position";
						} else if (lx == "dm") {
							ty = "Sequence";
						} else if (lx == "zgtz") {
							ty = "Elevator Type";
						} else if (lx == "ms") {
							ty = "Fault Part";
						} else if (lx == "lb") {
							ty = "Fault Type";
						} else
							ty = ""
						var pam = {};
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						if (njhid == "dcllist") {
							pam.userid = njuserid;
							if (ty != "") {
								if (lx == "FullName" || lx == "LoginName")
									pam.SearchSpec = "[Employee." + ty
											+ "] LIKE '*" + opvalue + "*'";
								else
									pam.SearchSpec = "EXISTS([Employee." + ty
											+ "] LIKE '*" + opvalue + "*')";

							} else {
								pam.SearchSpec = "";
							}
							cs.prodName = "QueryPageEmp";
						} else if (njhid == "ghllist") {
							pam.userid = njuserid;
							if (ty != "")
								pam.SearchSpec = "[Asset Mgmt - Asset." + ty
										+ "] LIKE '*" + opvalue + "*'";
							else
								pam.SearchSpec = "";

							cs.prodName = "QueryPageAssetInf";
						} else if (njhid == "zgllist") {
							pam.userid = njuserid;
							if (ty != "" && ty != "Sequence")
								pam.SearchSpec = "[HEL Second Defect Category Setting."
										+ ty + "] LIKE '*" + opvalue + "*'";
							else if (ty == "Sequence")
								pam.SearchSpec = "[HEL Second Defect Category Setting."
										+ ty + "] = '" + opvalue + "'";
							else
								pam.SearchSpec = "";

							cs.prodName = "PartQueryPage";
						}
						var pg = Ext.getCmp('njhpg').getValue();
						pam.StartRowNum = parseInt(pg) * 10 + "";
						cs.parameters = pam;
						obj.getGHJ(obj, getresult, cs);

						function getresult(res) {
							var Data = null;
							var store = null;
							if (njhid == "dcllist") {
								Data = res.QueryPageEmp_Output.ListOfHelEaiAppEmployeeDetailsInformation.Employee;
								store = obj
										.getStore('dcllistStore',
												'HelcPDA.store.inspection.dcllistStore');
							} else if (njhid == "ghllist") {
								Data = res.QueryPageAssetInf_Output.ListOfHelEaiAppAssetManagementInformation;
								Data = Data['ListOfAssetMgmt-Asset'];
								Data = Data['AssetMgmt-Asset'];
								store = obj
										.getStore('ghllistStore',
												'HelcPDA.store.inspection.ghllistStore');
							} else if (njhid == "zgllist") {
								Data = res.PartQueryPageResponse.SiebelMessage.ListOfHelEaiAppSecondDefectCategorySettingIo.HelSecondDefectCategorySetting;
								store = obj
										.getStore('zgllistStore',
												'HelcPDA.store.inspection.zgllistStore');
							}
							store.setData(Data);

						}
						;

					},
					njnextpage : function() {

						Ext.getCmp('njhpg').setValue(
								(parseInt(Ext.getCmp('njhpg').getValue()) + 1)
										+ "");
						this.search_njlist();
					},
					njlastpage : function() {
						if (Ext.getCmp('njhpg').getValue() == "0") {
							Ext.Msg.alert('提示', '已经是首页了！');
							return;
						}
						Ext.getCmp('njhpg').setValue(
								(parseInt(Ext.getCmp('njhpg').getValue()) - 1)
										+ "");
						this.search_njlist();
					},
					serach_ghllist : function(ob, index, target, record, e,
							eOpts) {
						var AssetNumber = record.get('AssetNumber');
						var AssetDomainName = record.get('AssetDomainName');
						Ext.getCmp('AssetNumber').setValue(AssetNumber);
						Ext.getCmp('AssetDomainName').setValue(AssetDomainName);
						var Panel = Ext.getCmp('Panel_List_Id');
						if (Panel) {
							Panel.destroy();
						}
					},
					search_zgbj : function() {
						var obj = this;
						var getresult = function(res) {

							var PanelId = 'zgllist';
							var ListArray = {};
							ListArray.id = 'serach_zgllist';
							ListArray.StoreName = 'zgllistStore';
							ListArray.StoreFullName = 'HelcPDA.store.inspection.zgllistStore';
							// ListArray.StoreParam=["FullName"];

							var opt = [ {
								text : '请选择',
								value : ''
							}, {
								text : '代码',
								value : 'dm'
							}, {
								text : '梯种',
								value : 'zgtz'
							}, {
								text : '类别',
								value : 'lb'
							}, {
								text : '描述',
								value : 'ms'
							}, ];
							var tpl = '';
							tpl += '<table border=0 width=100% style="color:#666">'
									+ '<tr>'
									+ '                <td width=50%>'
									+ '                    <b>代码:</b>{Sequence} '
									+ '                </td>'
									+ '                <td width=50%><b>梯种:</b>{ElevatorType}</td>'
									+

									'                </tr> '
									+ '                <tr>'
									+ '                <td width=50%><b>类别:</b>{FaultType}</td>'
									+ '                <td    width=50%>'
									+ '                   <b>描述:</b>{FaultPart} '
									+ '                </td>'
									+ '                </tr>' + '    </table>';
							console.log(res);
							var Data = res.PartQueryPageResponse.SiebelMessage.ListOfHelEaiAppSecondDefectCategorySettingIo.HelSecondDefectCategorySetting;
							// console.log(Data);
							obj.getnjlist(PanelId, ListArray, Data, tpl, opt);
						};

						var pam = {};
						pam.userid = njuserid;
						pam.SearchSpec = "";
						pam.StartRowNum = "0";
						var cs = {};
						cs.adpName = "HttpAdapter_pda_nj";
						cs.prodName = "PartQueryPage";
						cs.parameters = pam;
						obj.getGHJ(obj, getresult, cs);
					},
					serach_zgllist : function(ob, index, target, record, e,
							eOpts) {
						var name = record.get('FaultPart');
						Ext.getCmp('RectificationParts').setValue(name);
						var Panel = Ext.getCmp('Panel_List_Id');
						if (Panel) {
							Panel.destroy();
						}
					}

				});