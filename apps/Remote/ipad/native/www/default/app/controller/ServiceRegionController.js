
/* JavaScript content from app/controller/ServiceRegionController.js in folder common */
/*
 * File: app/controller/ServiceRegionController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HelcRemote.controller.ServiceRegionController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "list#service_regionMap_listNav": {
                itemtap: 'onService_regionMap_listNavItemSelect'
            },
            "dataview#service_regionMap_DataCity": {
                itemtap: 'onService_regionMap_DataCityItemTap'
            },
            "button#Service_subNav_RegionMap_btnReturn": {
                tap: 'onService_subNav_RegionMap_btnReturnTap'
            },
            "list#subNav_Branch": {
                itemtap: 'onSubNav_BranchItemSelect'
            },
            "button#service_Branch_BtnReturn": {
                tap: 'onService_Branch_BtnReturnTap'
            },
            "button#Service_branch_btnStop": {
                tap: 'onService_branch_btnStopTap'
            },
            "button#Service_station_btnStop": {
                tap: 'onService_station_btnStopTap'
            },
            "button#Service_station_btnLastPage": {
                tap: 'onService_station_btnLastPageTap'
            },
            "button#Service_station_btnNextPage": {
                tap: 'onService_station_btnNextPageTap'
            },
            "dataview#Service_branchMap_DataRegion": {
                itemtap: 'onService_branchMap_DataRegionItemTap'
            },
            "dataview#Service_branch_Maintain_Data": {
                itemtap: 'onService_branch_Maintain_DataItemTap'
            },
            "dataview#service_Branch_FaultMonitorionMap_Data": {
                itemtap: 'onService_Branch_FaultMonitorionMap_DataItemTap'
            },
            "button#service_FaultMonitor_BtnAll": {
                tap: 'onService_FaultMonitor_BtnAllTap'
            },
            "button#service_FaultMonitor_BtnTrap": {
                tap: 'onService_FaultMonitor_BtnTrapTap'
            },
            "button#service_FaultMonitor_BtnMonitor": {
                tap: 'onService_FaultMonitor_BtnMonitorTap'
            }
        }
    },

    /* 售后.区域画面.功能菜单 */
    onService_regionMap_listNavItemSelect: function(dataview, index, target, record, e, eOpts) {
        var parent = Ext.getCmp('Service_subNav_RegionMap');
        var classname;
        var onInitial = Ext.emptyFn();
        var regioncode = Ext.getCmp('Service_subNav_RegionMap').initialConfig.parm.parm;

        remote.send(dataview, index);

        var text = record.get('text');
        switch(text) {
            case '区域地图':
                classname = 'Service.regionMap_Branch';
                onInitial = function() {
                    Ext.getCmp('service_regionMap_DataCity').getStore().loadDat(
                        function() {},
                        function() {},
                        regioncode
                    );
                };
                break;

            case '行业新闻':
                classname = 'Service.news';
                onInitial = function() {
                    Ext.getCmp('service_News_DataNews').getStore().loadDat(
                        function() {},
                        function() {},
                        regioncode
                    );
                };
                break;

            case '分公司':
                classname = 'Service.branch';
                break;

            case '故障演示':
                classname = 'Service.demo';
                break;
        }
        subView.show({classname:classname,parent:parent,onInitial:onInitial});
    },

    /* 从区域进入分公司 */
    onService_regionMap_DataCityItemTap: function(dataview, index, target, record, e, eOpts) {
        var shortName = record.get('shortName');
        var companyCode = record.get('maintainCode');
        var companyName = record.get('maintainName');
        var areaCode = Ext.getCmp('Service_subNav_RegionMap').initialConfig.parm.parm;
        viewUtil.goNext('Service.subNav_Branch', {
            onInitial: function() {
                viewPath.push(shortName);
                Ext.getCmp(this.getId() + '_title').setHtml(viewPath.print());
            },
            onShow: function() {
                remote.send(this, undefined, areaCode + ',' + companyCode  + ',' + shortName + ',' + companyName);
            },
            companyCode: companyCode,
            areaCode: areaCode,
        });
    },

    /* 从区域画面回到售后首页 */
    onService_subNav_RegionMap_btnReturnTap: function(button, e, eOpts) {
        viewPath.pop();
        viewUtil.goLast();
    },

    /* 售后.区域.分公司画面.功能菜单 */
    onSubNav_BranchItemSelect: function(dataview, index, target, record, e, eOpts) {
        var parent = Ext.getCmp('service_Branch');
        var classname;
        var onInitial = Ext.emptyFn();
        var onShow = Ext.emptyFn();
        var companyCode = Ext.getCmp('service_Branch').initialConfig.parm.companyCode;
        var areaCode = Ext.getCmp('service_Branch').initialConfig.parm.areaCode;

        remote.send(dataview, index);

        var text = record.get('text');
        switch(text) {
            case '故障受信监控':
                classname = 'Service.branch_FaultMonitor';
                onInitial = function() {
                    Ext.getCmp('service_Branch_FaultMonitorionMap_Data').getStore().loadDat(
                        function() {},
                        function() {},
                        companyCode
                    );
                };
                break;

            case '保养计划':
                classname = 'Service.branch_Maintain';
                onInitial = function() {
                    Ext.getCmp('Service_branch_Maintain_Data').getStore().loadDat(
                        function() {},
                        function() {},
                        companyCode
                    );
                };
                break;

            case '常用展示梯':
                classname = 'Service.monitor_Favorite';
                onInitial = function() {
                    Ext.getCmp('Service_Monitor_Favorite').getStore().loadDat(
                        function() {},
                        function() {},
                        null
                    );
                };
                break;

            case '分公司地图':
                classname = 'Service.branchMap';
                onInitial = function() {
                    Ext.getCmp('Service_branchMap_DataRegion').getStore().loadDat(
                        function() {},
                        function() {},
                        companyCode
                    );
                };
                break;

            case '保养站':
                classname = 'Service.station';
                break;

            default:
                break;

        }
        subView.show({classname:classname, parent:parent, onInitial:onInitial});
    },

    /* 从分公司画面回到区域画面 */
    onService_Branch_BtnReturnTap: function(button, e, eOpts) {
        viewPath.pop();
        viewUtil.goLast();
    },

    /* 区域-分公司 列表控制 */
    onService_branch_btnStopTap: function(button, e, eOpts) {
        var text = button.getText();
        var index;
        if(text==='停止换屏') {
            text = '继续换屏';
            index = 0;
        } else {
            text = '停止换屏';
            index = 1;
        }
        button.setText(text);
        remote.send(button.getId(), index);
    },

    /* 区域-分公司-保养站列表控制 */
    onService_station_btnStopTap: function(button, e, eOpts) {
        var text = button.getText();
        var index;
        if(text==='停止换屏') {
            text = '继续换屏';
            index = 0;
        } else {
            text = '停止换屏';
            index = 1;
        }
        button.setText(text);
        remote.send(button.getId(), index);
    },

    onService_station_btnLastPageTap: function(button, e, eOpts) {
        remote.send(button);
    },

    onService_station_btnNextPageTap: function(button, e, eOpts) {
        remote.send(button);
    },

    /* 选中保养站 - 地图Pan至保养站位置 */
    onService_branchMap_DataRegionItemTap: function(dataview, index, target, record, e, eOpts) {
        var station = record.get('maintainCode');
        remote.send(dataview, undefined, station);
    },

    /* 分公司保养计划 - 选中记录 - 进入遥监 */
    onService_branch_Maintain_DataItemTap: function(dataview, index, target, record, e, eOpts) {
        if(record.get('isremoteMonitor')!=='Y') return;

        var elevatorno   = record.get('elevatorCode');
        var elevatortype = record.get('elevatorType');
        HelcRemote.app.getController('ServiceElevatorController').doOpenElevatorDetail(elevatorno, elevatortype);
    },

    /* 选中故障受信监控列表 - 选中记录 - 进入遥监 */
    onService_Branch_FaultMonitorionMap_DataItemTap: function(dataview, index, target, record, e, eOpts) {
        if(record.get('isMonitor')!=='Y') return;

        var elevatorno   = record.get('employeeNum');
        var elevatortype = record.get('elevatorType');
        HelcRemote.app.getController('ServiceElevatorController').doOpenElevatorDetail(elevatorno, elevatortype);
    },

    /* 故障受信监控列表 - 过滤功能 */
    onService_FaultMonitor_BtnAllTap: function(button, e, eOpts) {
        // 所有
        Ext.getCmp('service_Branch_FaultMonitorionMap_Data').getStore().filteDat('');
    },

    onService_FaultMonitor_BtnTrapTap: function(button, e, eOpts) {
        // 困人
        Ext.getCmp('service_Branch_FaultMonitorionMap_Data').getStore().filteDat('trap');
    },

    onService_FaultMonitor_BtnMonitorTap: function(button, e, eOpts) {
        // 遥监
        Ext.getCmp('service_Branch_FaultMonitorionMap_Data').getStore().filteDat('monitor');
    },

    /* 打开区域画面 */
    doOpenRegionView: function(region) {
        var regioncode;
        switch(region) {
            case '华东':
                regioncode = 'huadong';
                break;
            case '华南':
                regioncode = 'huanan';
                break;
            case '华西':
                regioncode = 'huaxi';
                break;
            case '华北':
                regioncode = 'huabei';
                break;
        }

        viewUtil.goNext('Service.subNav_RegionMap', {
            parm: regioncode,
            onInitial: function() {
                viewPath.push(region + '地区');
                Ext.getCmp(this.getId() + '_title').setHtml(viewPath.print());
            },
            onShow: function() {
                remote.send(this, undefined, regioncode);
            }
        });
    }

});