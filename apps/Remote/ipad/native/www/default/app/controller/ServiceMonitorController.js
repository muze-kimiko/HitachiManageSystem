
/* JavaScript content from app/controller/ServiceMonitorController.js in folder common */
/*
 * File: app/controller/ServiceMonitorController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HelcRemote.controller.ServiceMonitorController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "button#service_Monitor_BtnReturn": {
                tap: 'onService_Monitor_BtnReturnTap'
            },
            "list#subNav_Monitor": {
                itemtap: 'onSubNav_MonitorItemTap'
            },
            "dataview#Service_Monitor_Favorite": {
                itemtap: 'onService_Monitor_FavoriteItemTap',
                initialize: 'onService_Monitor_FavoriteInitialize'
            },
            "button#monitor_BtnAll": {
                tap: 'onMonitor_BtnAllTap'
            },
            "button#monitor_BtnConfirmInput": {
                tap: 'onMonitor_BtnConfirmInputTap'
            },
            "dataview#Service_Monitor_Company": {
                itemtap: 'onService_Monitor_CompanyItemTap'
            },
            "dataview#Service_Monitor_Domain": {
                itemtap: 'onService_Monitor_DomainItemTap'
            },
            "dataview#Service_Monitor_Elevator": {
                itemtap: 'onService_Monitor_ElevatorItemTap'
            },
            "dataview#Service_Monitor_Query": {
                itemtap: 'onService_Monitor_QueryItemTap'
            }
        }
    },

    /* 退出实时监控模块 */
    onService_Monitor_BtnReturnTap: function(button, e, eOpts) {
        viewPath.pop();
        viewPath.pop();
        viewUtil.goLast();
    },

    /* 实时监控 - 左侧菜单 */
    onSubNav_MonitorItemTap: function(dataview, index, target, record, e, eOpts) {
        var parent = Ext.getCmp('service_Monitor');
        var classname;
        var onInitial = Ext.emptyFn();
        var onShow = Ext.emptyFn();

        remote.send(dataview, index);

        var text = record.get('text');
        viewPath.replace(text);
        Ext.getCmp('service_Monitor_title').setHtml(viewPath.print());
        switch(text) {

            case '常用展示梯':
                classname = 'Service.monitor_Favorite';
                onInitial = function() {
                    Ext.getCmp('Service_Monitor_Favorite').getStore().loadDat(
                        function() {},
                        function() {},
                        null
                    );
                };
                break;

            case '东区':
            case '南区':
            case '西区':
            case '北区':
                classname = 'Service.monitor_Select';
                onInitial = function() {
                    Ext.getCmp('Service_Monitor_Domain').getStore().setData([]);
                    Ext.getCmp('Service_Monitor_Elevator').getStore().setData([]);
                    Ext.getCmp('Service_Monitor_Company').getStore().loadDat(
                        function() {},
                        function() {},
                        text
                    );
                };
                break;

            case '搜索工号':
                classname = 'Service.monitor_Input';
                onInitial = function() {
                    Ext.getCmp('Service_Monitor_Query').getStore().setData([]);
                };
                break;
        }

        subView.show({classname:classname, parent:parent, onShow:onShow, onInitial:onInitial});
    },

    /* 常用展示梯 - 进入电梯详细画面 */
    onService_Monitor_FavoriteItemTap: function(dataview, index, target, record, e, eOpts) {
        HelcRemote.app.getController('ServiceElevatorController').
            doOpenElevatorDetail(record.get('asset_num'), record.get('elevator_type'));
    },

    /* 搜索工号时是否包含无遥监工号 */
    onMonitor_BtnAllTap: function(button, e, eOpts) {
        var all = Ext.getCmp('monitor_all').getValue();
        var color;

        if(all==='') {
            all = 'Y';
            color = '#45ADED';
        } else {
            all = '';
            color = '#666';
        }
        Ext.getCmp('monitor_BtnAll')
        .setText('<div style=\'font-size:0.8em;\'>包含无遥监 <i style=\'color:' + color + '\' class=\'fa fa-check\'></i></div>');
        Ext.getCmp('monitor_all').setValue(all);
    },

    /* 输入工号 - 进入电梯详细画面 */
    onMonitor_BtnConfirmInputTap: function(button, e, eOpts) {
        var city  = Ext.getCmp('monitor_city').getValue().trim().replace(/[#%\']/g, '');
        var query = Ext.getCmp('monitor_q').getValue().trim().replace(/[#%\']/g, '');
        var all   = Ext.getCmp('monitor_all').getValue();

        //console.log(query);
        Ext.getCmp('monitor_city').setValue(city);
        Ext.getCmp('monitor_q').setValue(query);
        if(query.length < 2) {
            Ext.toast('查询条件必须为2个字符以上！');
            return;
        }
        Ext.getCmp('Service_Monitor_Query').getStore().loadDat(
            function() {},
            function() {},
            {
                city: city,
                query: query,
                all: all
            }
        );


    },

    /* 选中分公司 - 显示楼盘 */
    onService_Monitor_CompanyItemTap: function(dataview, index, target, record, e, eOpts) {
        Ext.getCmp('Service_Monitor_Elevator').getStore().setData([]);

        var company_code = record.get('company_code');
        Ext.getCmp('Service_Monitor_Domain').getStore().loadDat(
            function() {},
            function() {},
            company_code
        );
    },

    /* 选中楼盘 - 显示工号 */
    onService_Monitor_DomainItemTap: function(dataview, index, target, record, e, eOpts) {
        var domain_name = record.get('domain_name');
        var account_name = record.get('account_name');
        Ext.getCmp('Service_Monitor_Elevator').getStore().loadDat(
            function() {},
            function() {},
            {
                domain_name:domain_name,
                account_name:account_name
            }
        );
    },

    /* 选中工号 - 进入遥监 */
    onService_Monitor_ElevatorItemTap: function(dataview, index, target, record, e, eOpts) {
        HelcRemote.app.getController('ServiceElevatorController').
            doOpenElevatorDetail(record.get('asset_num'), record.get('elevator_type'));
    },

    /* 搜索 - 选中工号 - 进入遥监 */
    onService_Monitor_QueryItemTap: function(dataview, index, target, record, e, eOpts) {
        var monitor_flag = record.get('asset_control_flag');
        //if(monitor_flag!=='Y') return;

        HelcRemote.app.getController('ServiceElevatorController').
            doOpenElevatorDetail(record.get('asset_num'), record.get('elevator_type'));
    },

    /* 初始化左拨按钮 */
    onService_Monitor_FavoriteInitialize: function(component, eOpts) {
        var me = Ext.getCmp('Service_Monitor_Favorite');
        component.setPlugins([{
            xclass: 'ux.SlideActions',
            openPosition: 150,
            buttons:[{
                xtype: 'button',
                baseCls: 'x-button',
                text: '取消收藏',
                initial: function(button) {
                },
                listeners: {
                    tap: function(button, e){
                        e.stopPropagation();
                        return false;
                    },
                    scope: this
                },
                handler: function(button, e) {
                    component.fireEvent('hide'); // 隐藏列表的滑动按钮组
                    var record = button.getRecord();
                    var eleno = record.get('asset_num');
                    Ext.Msg.confirm('注意', '确认删除工号'+eleno+'收藏吗?', function(id, value) {
                        if(id!='yes') return;
                        var store = dataUtil.createStore('Service_Monitor_Favorite_Del');
                        store.loadDat(
                            function() {
                                Ext.toast(store.getData().getAt(0).get('msg'));
                                Ext.getCmp('Service_Monitor_Favorite').getStore().remove(record);
                            },
                            Ext.emptyFn(),
                            eleno
                        );
                    });
                }
            }]
        }]);
    }

});