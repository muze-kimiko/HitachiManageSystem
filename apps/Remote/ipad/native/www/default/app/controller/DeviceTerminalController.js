
/* JavaScript content from app/controller/DeviceTerminalController.js in folder common */
/*
 * File: app/controller/DeviceTerminalController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HelcRemote.controller.DeviceTerminalController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.deviceterminalcontroller',

    config: {
        control: {
            "dataview#nav_indexListTerminal": {
                itemtap: 'onNav_indexListTerminalItemTap'
            },
            "panel#remote_TerminalMain": {
                show: 'onRemote_TerminalMainShow'
            },
            "list#remote_TerminalMain_List": {
                select: 'onRemote_TerminalMain_ListSelect'
            },
            "button#Term_RestartButton": {
                tap: 'onTerm_RestartButtonTap'
            },
            "button#Term_RebootButton": {
                tap: 'onTerm_RebootButtonTap'
            },
            "button#Term_ShutdownButton": {
                tap: 'onTerm_ShutdownButtonTap'
            }
        }
    },

    onNav_indexListTerminalItemTap: function(dataview, index, target, record, e, eOpts) {
        if(index===0) {
            viewUtil.goLast();
        } else {
            this.doRefresh_Terminal();
        }
    },

    onRemote_TerminalMainShow: function(component, eOpts) {
        var me = this;
        var justLoopIt = function() {
            var task = Ext.create('Ext.util.DelayedTask', function() {
                me.doRefresh_Terminal();
                justLoopIt.call(this);
            }, this);

            if(!Ext.getCmp('remote_AcMain')) {
                task.cancel();
            } else {
                task.delay(5000);
            }
        };

        me.doRefresh_Terminal();
        justLoopIt();
    },

    onRemote_TerminalMain_ListSelect: function(dataview, record, eOpts) {
        var mallname = record.get('mallName');
        var floor = record.get('floorName');
        var time = record.get('heartbeattime');
        var data = record.get('heartbeatstr');
        var alarmTime = record.get('alarmTime');
        var alarmData = record.get('alarmData');

        Ext.getCmp('Term_MallFloor').setHtml(mallname + '&nbsp;' + floor);
        Ext.getCmp('Term_HeartBeatTime').setHtml('<div style="color:' + alarmTime + '">最近在线：' + time + '<div>');
        Ext.getCmp('Term_HeartBeatStr').setHtml ('<div style="color:' + alarmData + '">最近状态：' + data + '<div>');

        var p = Ext.getCmp('TermInfoPanel');
        p.show();
    },

    onTerm_RestartButtonTap: function(button, e, eOpts) {
        this.doCommand('RESTART');
    },

    onTerm_RebootButtonTap: function(button, e, eOpts) {
        this.doCommand('REBOOT');
    },

    onTerm_ShutdownButtonTap: function(button, e, eOpts) {
        this.doCommand('SHUTDOWN');
    },

    doRefresh_Terminal: function() {
        var me = this;
        var p = Ext.getCmp('TermInfoPanel');
        p.hide();

        var list = Ext.getCmp('remote_TerminalMain_List');
        list.deselectAll();
        list.getStore().loadDat(function() {
            Ext.toast('已刷新状态！');
        }, Ext.emptyFn, '');
    },

    doCommand: function(cmd) {
        var sel = Ext.getCmp('remote_TerminalMain_List').getSelection();
        if(sel.length<=0) return;
        var termno = sel[0].get('serial');

        // switch(cmd) {
        //     case 'SHUTDOWN':
        //         Ext.MessageBox.confirm(
        //             "<b style='color:red'><i class='fa fa-exclamation-triangle'></i>&nbsp;注意</b>",
        //             "即将<b style='color:red'>关闭</b>[" + termno + "]号终端, 你确定这样做吗?",
        //             function(btn) {
        //                 if(btn==='no') return;
        //             }
        //         );
        //         break;
        // }

        loadMask.show();
        var url = 'http://' + remote.getCmsIP() + '/YL_SCDG/business/terminal/terminalforopera.do';
        var me = this;
        Ext.data.JsonP.request({
           url: url,
           params: {
               code: cmd,
               serial: termno
           },
           callbackKey: 'callback',
           timeout: 5000,
           success: function(result, request) {
               me.doRefresh_Terminal();
               loadMask.hide();
           },
           failure: function() {
               Ext.toast('终端遥控请求失败!');
               loadMask.hide();
           }
        });
    }

});